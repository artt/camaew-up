{"version":3,"sources":["game/game.css","CamaewUp.js","effects-config.js","lobby/Entry.js","lobby/Join.js","lobby/Create.js","lobby/Wait.js","lobby/Lobby.js","game/BetCards.js","game/Mod.js","game/Players.js","game/Cell.js","game/RaceTrack.js","game/Dice.js","game/CardStack.js","game/Camp.js","game/BetArea.js","game/GameScreen.js","App.js","index.js","game/game.scss","assets/coin.svg"],"names":["module","exports","genArray","size","data","a","Array","i","cloneDeep","rankCats","G","indices","from","numCats","x","sort","b","cats","resetSmallRound","ctx","dice","fill","numPlayers","players","smallBets","removeMod","smallStack","effects","endSmallRound","scoreSmallRound","rank","smallBetWins","sum","length","j","coins","rollDice","playerID","numDiceLeft","filter","dieRolled","random","Die","roll","lastDiceRolled","console","error","catID","curCellNum","curStack","curCell","board","stack","curLayer","indexOf","slice","destCellHeight","concat","cleanUp","moveCat","placeMod","cellID","type","mod","modPos","log","message","logArray","push","CamaewUp","name","plugins","EffectsPlugin","endTurn","create","duration","rollDone","rollReset","moveFwd","modTape","modCucumber","setup","setupData","numTiles","betCards","bigStack","move","text","moves","preCats","preBoard","dest","cellNum","prevStack","destHeight","resolveBoard","winnings","win","curBet","bet","pop","losings","lose","scoreRace","maxCoins","winners","getWinners","makeSmallBet","card","makeBigBet","side","flipMod","newType","moveMod","turn","moveLimit","onEnd","onMove","minPlayers","maxPlayers","Entry","onJoinClick","onCreateClick","id","className","Form","Label","Control","value","serverPath","onChange","onServerPathChange","Button","variant","onClick","Join","onJoinJoinClick","onNameChange","gameID","onGameIDChange","disabled","backToEntry","Create","onCreateCreateClick","ToggleButtonGroup","onNumPlayersChange","ToggleButton","onNumCatsChange","Check","label","Wait","showState","setShowState","startGame","React","useState","gameInfo","setGameInfo","setNumPlayers","setPlayerID","playerCredentials","setPlayerCredentials","showConfirmLeave","setShowConfirmLeave","updateGameInfo","useCallback","fetch","serverPathFull","method","then","response","json","findSeat","sit","seatID","opts","playerName","roomID","headers","body","JSON","stringify","stand","updateAfter","credentials","useEffect","interval","setInterval","clearInterval","count","map","key","undefined","header","confirm","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Lobby","setName","lobbyState","setLobbyState","setGameID","setnumPlayers","setNumCats","setServerPath","createGame","joinGame","process","REACT_APP_AGENT","test","rooms","event","target","val","BetCards","cards","drag","e","dataTransfer","setData","getAttribute","bet_id","draggable","onDragStart","Mod","hasMod","player_id","SmallBetTable","bets","Fragment","color","Player","isCurrent","alt","src","CoinSVG","height","Players","currentPlayer","gameMetadata","p","Cell","cellData","cell_id","isExtra","prePlaceMod","preFlipMod","preMoveMod","onDragOver","preventDefault","onDrop","Number","getData","RaceTrack","showPlaceDialog","setShowPlaceDialog","showFlipDialog","setShowFlipDialog","setCellID","setType","setCats","PlaceDialog","FlipDialog","catEmoji","getSize","styles","substring","sz","width","margin","useEffectListener","tmpCats","cell","style","pos","left","top","Dice","rollClick","myTurn","setDice","setCatID","z","setZ","diceInterval","rollDoneHandler","finalDice","rollResetHandler","CardStack","cardClass","stackClass","clickHandler","dragOverHandler","doubleClickHandler","dropHandler","genRandomArray","l","tmp","transform","transformOrigin","Camp","diceUI","setDiceUI","BetArea","allowDrop","handleBigBetDrop","GameScreen","CamaewUpClient","history","createBrowserHistory","ReactGA","initialize","pageview","window","location","pathname","search","App","state","setState","EffectsBoardWrapper","GameScreen2","updateStateAfterEffects","Client","game","multiplayer","SocketIO","server","debug","String","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01f5d4ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellwidth\":\"120px\",\"cellheight\":\"120px\",\"cellmargin\":\"3px\",\"tokenwidth\":\"80px\",\"tokenheight\":\"30px\",\"tokenmargin\":\"5px\"};","import {sum, cloneDeep} from 'lodash'\nimport { EffectsPlugin } from 'bgio-effects/plugin';\nimport { config } from './effects-config';\nimport {random} from 'lodash'\n\n\nfunction genArray(size, data) {\n\tlet a = new Array(size );\n\tfor (let i = 0; i < size; i ++) {\n\t\ta[i] = cloneDeep(data);\n\t}\n\treturn a\n}\n\nfunction rankCats(G) {\n\tlet indices = Array.from(new Array(G.numCats), (x, i) => i)\t\n\tindices.sort((a, b) => (G.cats[b][0] - G.cats[a][0]) * 100 + (G.cats[b][1] - G.cats[a][1]));\t\n\treturn indices\n}\n\nfunction resetSmallRound(G, ctx) {\n\t// reset dice\n\tG.dice = Array(G.numCats).fill(0)\n\n\tfor (let i = 0; i < ctx.numPlayers; i ++) {\n\t\tG.players[i].smallBets = Array(G.numCats).fill([])\n\t\tremoveMod(G, i)\n\t}\n\n\tG.smallStack = Array(G.numCats).fill([2, 3, 5])\n\tctx.effects.endSmallRound()\n\n}\n\nfunction scoreSmallRound(G, ctx) {\n\t// console.log(\"End of small round.\")\n\n\t// reset dice\n\tG.dice = Array(G.numCats).fill(0)\n\n\t// get ranks\n\tconst rank = rankCats(G)\n\n\tfor (let i = 0; i < ctx.numPlayers; i ++) {\n\t\t\n\t\t// small bets\n\t\tlet smallBetWins = 0\n\t\tsmallBetWins += sum(G.players[i].smallBets[rank[0]])\n\t\tsmallBetWins += G.players[i].smallBets[rank[1]].length\n\t\tfor (let j = 2; j < G.numCats; j ++) {\n\t\t\tsmallBetWins -= G.players[i].smallBets[rank[j]].length\t\n\t\t}\n\t\t// console.log(\"Small bet wins for\", i, smallBetWins)\n\t\tG.players[i].coins += smallBetWins\n\t\t// G.players[i].smallBets = Array(G.numCats).fill([])\n\t\n\t\t// remove mods\n\t\t// removeMod(G, i)\n\n\t}\n\n\t// G.smallStack = Array(G.numCats).fill([2, 3, 5])\n\n}\n\nfunction scoreRace(G, ctx) {\n\t// console.log(\"End of race.\")\n\tconst rank = rankCats(G)\n\n\t// winning pile\n\tlet winnings = [1, 2, 3, 5, 8]\n\tfor (let i = 0; i < G.bigStack.win.length; i ++) {\n\t\tconst curBet = G.bigStack.win[i]\n\t\tif (curBet.bet === rank[0]) {\n\t\t\t// winning bet\n\t\t\tG.players[curBet.playerID].coins += winnings.pop()\n\t\t}\n\t\telse {\n\t\t\tG.players[curBet.playerID].coins -= 1\n\t\t}\n\t\tif (winnings.length === 0)\n\t\t\twinnings = [1]\n\t}\n\n\t// losing pile\n\tlet losings = [1, 2, 3, 5, 8]\n\tfor (let i = 0; i < G.bigStack.lose.length; i ++) {\n\t\tconst curBet = G.bigStack.lose[i]\n\t\tif (curBet.bet === rank[G.numCats - 1]) {\n\t\t\t// winning bet\n\t\t\tG.players[curBet.playerID].coins += losings.pop()\n\t\t}\n\t\telse {\n\t\t\tG.players[curBet.playerID].coins -= 1\n\t\t}\n\t\tif (losings.length === 0)\n\t\t\tlosings = [1]\n\t}\n\n}\n\nfunction getWinners(G) {\n\tlet maxCoins = [G.players[0].coins]\n\tlet winners = [0]\n\tfor (let i = 1; i < G.numPlayers; i ++) {\n\t\tif (G.players[i].coins > maxCoins) {\n\t\t\tmaxCoins = G.players[i].coins\n\t\t\twinners = [i]\n\t\t}\n\t\telse if (G.players[i].coins === maxCoins) {\n\t\t\twinners.push(i)\n\t\t}\n\t}\n\treturn winners\n}\n\nfunction moveCat(G, ctx, catID, roll) {\n\n\tconst curCellNum = G.cats[catID][0]\n\n\tlet curStack = []\n\n\t// check if the cat in question is already on the board\n\tif (curCellNum >= 0) {\n\t\tconst curCell = G.board[curCellNum].stack\n\t\tconst curLayer = curCell.indexOf(catID)\n\t\tcurStack = curCell.slice(curLayer)\n\t\t// update old cell\n\t\tG.board[curCellNum].stack = G.board[curCellNum].stack.slice(0, curLayer)\n\t}\n\t// if not then there's no need to worry about cats stacked on top\n\telse {\n\t\tcurStack = [catID]\n\t}\n\n\t// update new cell\n\tconst destCellHeight = G.board[curCellNum + roll].stack.length\n\tG.board[curCellNum + roll].stack = G.board[curCellNum + roll].stack.concat(curStack)\n\tfor (let i = 0; i < curStack.length; i ++) {\n\t\t// G.pos[curStack[i]] += roll\n\t\tG.cats[curStack[i]] = [curCellNum + roll, destCellHeight + i]\n\t}\n\n\tG.cleanUp = curCellNum + roll\n\n}\n\nfunction resolveBoard(G, ctx) {\n\n\tconst mod = G.board[G.cleanUp].mod\n\n\tif (mod !== null) {\n\t\tlog(G, {move: \"mod\", mod: mod.type})\n\t\tG.players[mod.playerID].coins += 1\n\t\tconst curStack = G.board[G.cleanUp].stack.slice()\n\t\tG.board[G.cleanUp].stack = []\n\t\tlet dest = 999\n\n\t\tif (mod.type === \"tape\") {\n\t\t\tdest = G.cleanUp - 1\n\t\t\tctx.effects.modTape({cellNum: G.cleanUp, preCats: cloneDeep(G.cats), prevStack: G.board[G.cleanUp - 1].stack.slice(), stack: curStack})\n\t\t\tG.board[dest].stack = curStack.concat(G.board[dest].stack)\n\t\t}\n\t\telse if (mod.type === \"cucumber\") {\n\t\t\tdest = G.cleanUp + 1\n\t\t\tctx.effects.modCucumber({cellNum: G.cleanUp, preCats: cloneDeep(G.cats), destHeight: G.board[dest].stack.length, stack: curStack})\n\t\t\tG.board[dest].stack = G.board[dest].stack.concat(curStack)\n\t\t}\n\n\t\tfor (let i = 0; i < G.board[dest].stack.length; i ++) {\n\t\t\tG.cats[G.board[dest].stack[i]] = [dest, i]\n\t\t}\n\t}\n\n}\n\nfunction rollDice(G, ctx, playerID) {\n\n\t// random dice first\n\tconst numDiceLeft = G.dice.filter(x => x === 0).length\n\tconst dieRolled = ctx.random.Die(numDiceLeft) - 1\n\tconst roll = ctx.random.Die(3)\n\tlet i = 0\n\tlet j = 0\n\tfor (j = 0; j < G.numCats; j ++) {\n\t\tif (G.dice[j] === 0) {\n\t\t\tif (i === dieRolled) {\n\t\t\t\tG.dice[j] = roll;\n\t\t\t\tG.lastDiceRolled = j;\n\t\t\t\tbreak\n\t\t\t}\n\t\t\ti ++\n\t\t}\n\t}\n\tif (j === G.numCats) {\n\t\tconsole.error(\"Something's wrong. The dice probably didn't get reset.\")\n\t}\n\n\t// move cat `j`` by `roll` accordingly\n\tmoveCat(G, ctx, j, roll)\n\tif (playerID != null)\n\t\tG.players[playerID].coins += 1\n\n\treturn [j, roll]\n\n}\n\nfunction makeSmallBet(G, playerID, bet) {\n\tconst card = G.smallStack[bet].pop()\n\tG.players[playerID].smallBets[bet].push(card)\n\treturn card\n}\n\nfunction makeBigBet(G, playerID, bet, side) {\n\tG.bigStack[side].push({playerID: playerID, bet: bet})\n\tG.players[playerID].betCards[bet] = false\n}\n\nfunction placeMod(G, playerID, cellID, type) {\n\tG.board[cellID].mod = {playerID: playerID, type: type}\n\tG.players[playerID].modPos = cellID\n}\n\nfunction removeMod(G, playerID) {\n\tif (G.players[playerID].modPos > -1) {\n\t\tG.board[G.players[playerID].modPos].mod = null\n\t\tG.players[playerID].modPos = -1\t\n\t}\n}\n\nfunction log(G, message) {\n\tG.logArray.push(message)\n}\n\nconst CamaewUp = {\n\tname: \"CamaewUp\",\n\tplugins: [EffectsPlugin(config)],\n\tsetup: (ctx, setupData) => {\n\t\tlet G = {\n\t\t\tdice: Array(setupData.numCats).fill(0),\n\t\t\tcats: Array(setupData.numCats).fill([-1, -1]),\n\t\t\tboard: genArray(setupData.numTiles + 3, {stack: [], mod: null}),\n\t\t\tplayers: genArray(ctx.numPlayers, {coins: 3,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsmallBets: Array(setupData.numCats).fill([]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbetCards: Array(setupData.numCats).fill(true),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodPos: -1}),\n\t\t\tsmallStack: Array(setupData.numCats).fill([2, 3, 5]),\n\t\t\tbigStack: {\"win\": [], \"lose\": []},\n\t\t\tlogArray: [],\n\t\t\tnumCats: setupData.numCats,\n\t\t\tnumTiles: setupData.numTiles,\n\t\t\tnumPlayers: ctx.numPlayers,\n\t\t\tlastDiceRolled: -1,\n\t\t\tcleanUp: -1,\n\t\t}\n\t\tlog(G, {move: \"text\", text: \"Welcome!\"})\n\n\t\tfor (let i = 0; i < G.numCats; i ++) {\n\t\t\trollDice(G, ctx)\n\t\t}\n\t\tresetSmallRound(G, ctx)\n\t\treturn G\n\t},\n\tmoves: {\n\t\troll: (G, ctx, playerID) => {\n\t\t\tconst preCats = cloneDeep(G.cats)\n\t\t\tconst preBoard = cloneDeep(G.board)\n\t\t\tconst [catID, roll] = rollDice(G, ctx, playerID)\n\t\t\tctx.effects.roll(catID)\n\t\t\tctx.effects.rollDone(roll)\n\t\t\tctx.effects.rollReset(G.dice.slice())\n\t\t\tfor (let i = 0; i < roll; i ++) {\n\t\t\t\tctx.effects.moveFwd({catID: catID, roll: i, preCats: preCats, preBoard: preBoard})\n\t\t\t}\n\t\t\tlog(G, {playerID: playerID, move: \"roll\", catID: catID, roll: roll})\n\t\t\tresolveBoard(G, ctx)\n\t\t\tif (G.cleanUp >= G.numTiles) {\n\t\t\t\t// end game\n\t\t\t\tscoreSmallRound(G, ctx)\n\t\t\t\tscoreRace(G, ctx)\n\t\t\t\tconst winners = getWinners(G)\n\t\t\t\tlog(G, {move: \"text\", text: \"Winners: \" + winners})\n\t\t\t\tlog(G, {move: \"text\", text: \"--- End of game ---\"})\n\t\t\t}\n\t\t\tif (G.dice.filter(x => x === 0).length === 0) {\n\t\t\t\tlog(G, {move: \"text\", text: \"--- End of small round ---\"})\n\t\t\t\tscoreSmallRound(G, ctx)\n\t\t\t\tresetSmallRound(G, ctx)\n\t\t\t}\n\t\t},\n\t\tmakeSmallBet: (G, ctx, playerID, bet) => {\n\t\t\tconst card = makeSmallBet(G, playerID, bet)\n\t\t\tlog(G, {playerID: playerID, move: \"smallBet\", catID: bet, card: card})\n\t\t},\n\t\tmakeBigBet: (G, ctx, playerID, bet, side) => {\n\t\t\tmakeBigBet(G, playerID, bet, side)\n\t\t\tlog(G, {playerID: playerID, move: \"bigBet\", side: side})\n\t\t},\n\t\tplaceMod: (G, ctx, playerID, cellID, type) => {\n\t\t\tplaceMod(G, playerID, cellID, type)\n\t\t\tlog(G, {playerID: playerID, move: \"placeMod\", cellID: cellID, type: type})\n\t\t},\n\t\tremoveMod: (G, ctx, playerID) => {\n\t\t\tremoveMod(G, playerID)\n\t\t\tlog(G, {playerID: playerID, move: \"removeMod\", cellID: G.players[playerID].modPos})\n\t\t},\n\t\tflipMod: (G, ctx, playerID) => {\n\t\t\tconst newType = G.board[G.players[playerID].modPos].mod.type === \"tape\" ? \"cucumber\" : \"tape\"\n\t\t\tconst cellID = G.players[playerID].modPos\n\t\t\tremoveMod(G, playerID)\n\t\t\tplaceMod(G, playerID, cellID, newType)\n\t\t\tlog(G, {playerID: playerID, move: \"flipMod\", cellID: G.players[playerID].modPos})\n\t\t},\n\t\tmoveMod: (G, ctx, playerID, cellID, type) => {\n\t\t\tremoveMod(G, playerID)\n\t\t\tplaceMod(G, playerID, cellID, type)\n\t\t\tlog(G, {playerID: playerID, move: \"placeMod\", cellID: cellID, type: type})\n\t\t},\n\t},\n\tturn: {\n\t\tmoveLimit: 1,\n\t\tonEnd: (G, ctx) => {\n\t\t},\n\t\tonMove: (G, ctx) => {\n\t\t}\n\t},\n\tminPlayers: 2,\n\tmaxPlayers: 8\n}\n\nexport default CamaewUp;","export const config = {\n\t// Declare the effect types you need.\n\teffects: {\n\t\t// Each effect is named by its key.\n\t\t// This creates a zero-config endTurn effect:\n\t\tendTurn: {},\n\n\t\troll: {\n\t\t\tcreate: (data) => (data),\n\t\t\tduration: 1,\n\t\t},\n\t\trollDone: {\n\t\t\tcreate: (data) => (data),\n\t\t\tduration: 0.2,\n\t\t},\n\t\trollReset: {\n\t\t\tcreate: (data) => (data),\n\t\t},\n\n\t\tmoveFwd: {\n\t\t\tcreate: (data) => (data),\n\t\t\tduration: 0.3,\n\t\t},\n\t\tmodTape: {\n\t\t\tcreate: (data) => (data),\n\t\t\tduration: 0.3,\n\t\t},\n\t\tmodCucumber: {\n\t\t\tcreate: (data) => (data),\n\t\t\tduration: 0.3,\n\t\t},\n\n\t\tendSmallRound: {}\n\t},\n};","import React from 'react'\nimport {Button, Form} from 'react-bootstrap'\n\nexport default function Entry({data, onJoinClick, onCreateClick}) {\n\n\treturn(\n\t\t<div id=\"entry-container\" className=\"lobby\">\n\t\t\t<div id=\"entry-server\">\n\t\t\t\t<Form.Label>Server</Form.Label>\n\t\t\t\t<Form.Control type=\"text\" value={data.serverPath} onChange={data.onServerPathChange} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button variant=\"primary\" onClick={onJoinClick} size=\"lg\">Join Game</Button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button variant=\"primary\" onClick={onCreateClick} size=\"lg\">Create Game</Button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport {Button, Form} from 'react-bootstrap'\n\n// function Join({onJoinJoinClick, onGameIDChange, gameID}) {\nexport default function Join({data, onJoinJoinClick}) {\n\n\treturn(\n\t\t<div className=\"lobby\">\n\t\t\t<div>\n\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t<Form.Control type=\"text\" value={data.name} onChange={data.onNameChange} />\n\t\t\t</div>\n\t\t\t<div id=\"join-gameid\">\n\t\t\t\t<Form.Label>Game ID</Form.Label>\n\t\t\t\t<Form.Control type=\"text\" value={data.gameID} onChange={data.onGameIDChange} />\n\t\t\t</div>\n\t\t\t<div id=\"lobby-join\" className=\"center\">\n\t\t\t\t<Form.Label>Join Game</Form.Label>\n\t\t\t\t<Button variant=\"primary\" onClick={onJoinJoinClick} disabled={!data.gameID || !data.name}>Join</Button>\n\t\t\t\t<Button variant=\"secondary\" onClick={data.backToEntry}>Back</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n}\n","import React from 'react'\nimport {Button, Form, ToggleButtonGroup, ToggleButton} from 'react-bootstrap'\n\nexport default function Create({data, onCreateCreateClick}) {\n\n\treturn(\n\t\t<div className=\"lobby\">\n\t\t\t<div>\n\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t<Form.Control type=\"text\" value={data.name} onChange={data.onNameChange} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Form.Label>Number of players</Form.Label>\n\t\t\t\t<ToggleButtonGroup type=\"radio\" name=\"numPlayers\" value={data.numPlayers} onChange={data.onNumPlayersChange}>\n\t\t\t\t\t<ToggleButton value={2}>2</ToggleButton>\n\t\t\t\t\t<ToggleButton value={3}>3</ToggleButton>\n\t\t\t\t\t<ToggleButton value={4}>4</ToggleButton>\n\t\t\t\t\t<ToggleButton value={5}>5</ToggleButton>\n\t\t\t\t\t<ToggleButton value={6}>6</ToggleButton>\n\t\t\t\t\t<ToggleButton value={7}>7</ToggleButton>\n\t\t\t\t\t<ToggleButton value={8}>8</ToggleButton>\n\t\t\t\t</ToggleButtonGroup>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Form.Label>Number of cats</Form.Label>\n\t\t\t\t<ToggleButtonGroup type=\"radio\" name=\"numCats\" value={data.numCats} onChange={data.onNumCatsChange}>\n\t\t\t\t\t<ToggleButton value={3}>3</ToggleButton>\n\t\t\t\t\t<ToggleButton value={4}>4</ToggleButton>\n\t\t\t\t\t<ToggleButton value={5}>5</ToggleButton>\n\t\t\t\t\t<ToggleButton value={6}>6</ToggleButton>\n\t\t\t\t</ToggleButtonGroup>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Form.Check type=\"checkbox\" label=\"Veil mode\" />\n\t\t\t\t<Form.Check type=\"checkbox\" label=\"Random seat\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button variant=\"primary\" onClick={onCreateCreateClick} disabled={!data.name}>Create</Button>\n\t\t\t\t<Button variant=\"secondary\" onClick={data.backToEntry}>Back</Button>\n\t\t\t</div>\n\t\t</div>\n\t)\n\n}\n","import React from 'react'\nimport {Button, Modal} from 'react-bootstrap'\n\nexport default function Wait({data, startGame}) {\n\n\tconst [gameInfo, setGameInfo] = React.useState(null)\n\tconst [numPlayers, setNumPlayers] = React.useState(0)\n\tconst [playerID, setPlayerID] = React.useState(-1)\n\tconst [playerCredentials, setPlayerCredentials] = React.useState(\"\")\n\tconst [showConfirmLeave, setShowConfirmLeave] = React.useState(false)\n\n\t// no idea why we need to use useCallback() :P\n\t\n\tconst updateGameInfo = React.useCallback(() => {\n\t\t// console.log(\"Getting game info...\", data.gameID)\n\t\tfetch(data.serverPathFull + \"/\" + data.gameID, {\n\t\t\tmethod: \"get\"\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => setGameInfo(data))\n\t}, [data.gameID, data.serverPathFull])\n\n\tconst findSeat = React.useCallback(() => {\n\t\tupdateGameInfo()\n\t\tfor (let id=0; id < gameInfo.players.length; id ++) {\n\t\t\tif (gameInfo.players[id].name == null) {\n\t\t\t\treturn id\n\t\t\t}\n\t\t}\n\t}, [gameInfo, updateGameInfo])\n\n\tconst sit = React.useCallback(() => {\n\t\t// console.log(\"Sitting...\", gameInfo)\n\t\tconst seatID = findSeat()\n\t\t// console.log(\"Found empty seat\", seatID)\n\t\tconst opts = {\n\t\t\tplayerID: seatID,\n\t\t\tplayerName: data.name\n\t\t}\n\t\tfetch(data.serverPathFull + \"/\" + gameInfo.roomID + \"/join\", {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\tbody: JSON.stringify(opts)\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tsetPlayerCredentials(data.playerCredentials)\n\t\t\t\tsetPlayerID(seatID)\n\t\t\t\tupdateGameInfo()\n\t\t\t})\n\t}, [data.name, findSeat, gameInfo, data.serverPathFull, updateGameInfo])\n\n\tReact.useEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tupdateGameInfo();\n\t\t}, 2000);\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t});\n\n\tReact.useEffect(() => {\n\t\tif (gameInfo != null) {\n\t\t\tsetNumPlayers(() => {\n\t\t\t\tlet count = 0\n\t\t\t\tfor (let id=0; id < gameInfo.players.length; id ++) {\n\t\t\t\t\tif (gameInfo.players[id].name != null) {\n\t\t\t\t\t\tcount ++\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn count\n\t\t\t})\n\t\t}\n\t}, [gameInfo, playerCredentials, playerID, sit])\n\n\tfunction stand(updateAfter=true) {\n\t\tconst opts = {\n\t\t\t\tplayerID: playerID,\n\t\t\t\tcredentials: playerCredentials\n\t\t\t} \n\t\tfetch(data.serverPathFull + \"/\" + gameInfo.roomID + \"/leave\", {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\tbody: JSON.stringify(opts)\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (updateAfter) updateGameInfo()\n\t\t\t})\n\t\tsetPlayerID(-1)\n\t}\n\n\tfunction onLeaveClick() {\n\t\t// console.log(\"Leaving...\")\n\t\tsetShowConfirmLeave(true)\t\t\n\t}\n\n\tfunction leave() {\n\t\tstand(false)\n\t\tdata.backToEntry()\n\t}\n\n\tfunction dialog(text, showState, setShowState) {\n\t\t// defaults\n\t\tif (text.confirm === undefined) text.confirm = \"Confirm\"\n\t\treturn(\n\t\t\t<Modal show={showState} onHide={() => setShowState(false)}>\n\t\t\t\t{text.header && \n\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t<Modal.Title>{text.header}</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t}\n\t\t\t\t<Modal.Body>{text.body}</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={() => setShowState(false)}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => {\n\t\t\t\t\t\t\tleave()\n\t\t\t\t\t\t\tsetShowState(false)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t{text.confirm}\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n\tif (gameInfo == null) {\n\t\tupdateGameInfo()\n\t\treturn(<div>Connecting... {data.serverPath}</div>)\n\t}\n\telse {\n\t\treturn(\n\t\t\t<div className=\"lobby\">\n\t\t\t\t<div>\n\t\t\t\t\tgameID: {gameInfo.roomID}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tgameInfo.players.map((x, i) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<div key={i}>\n\t\t\t\t\t\t\t\t{x.id} - {x.name}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={sit} disabled={playerID >= 0}>Sit</Button>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={stand} disabled={playerID < 0 || numPlayers === 1}>Stand</Button>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={onLeaveClick}>Leave</Button>\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => startGame(data.serverPath, data.gameID, playerID, playerCredentials)} disabled={numPlayers < gameInfo.players.length}>Start</Button>\n\t\t\t\t</div>\n\n\t\t\t\t{/* Confirm leave dialog */}\n\n\t\t\t\t{dialog({\n\t\t\t\t\t\theader: \"Leaving\",\n\t\t\t\t\t\tbody: \"Are you sure you'd like to leave?\",\n\t\t\t\t\t\tconfirm: \"Leave\"\n\t\t\t\t\t},\n\t\t\t\t\tshowConfirmLeave, setShowConfirmLeave)}\n\n\t\t\t</div>\n\n\t\t)\n\t}\n\n}\n","import React from 'react'\nimport Entry from './Entry'\nimport Join from './Join'\nimport Create from './Create'\nimport Wait from './Wait'\n\nexport default function Lobby({startGame}) {\n\n\tconst [name, setName] = React.useState(\"\");\n\tconst [lobbyState, setLobbyState] = React.useState(\"entry\");\n\tconst [gameID, setGameID] = React.useState(\"\");\n\tconst [numPlayers, setnumPlayers] = React.useState(4);\n\tconst [numCats, setNumCats] = React.useState(5);\n\n\tlet server = \"https://camaew-up.herokuapp.com\"\n\tif (process.env.NODE_ENV === \"development\")\n\t\tserver = \"http://localhost:8000\"\n\tconst [serverPath, setServerPath] = React.useState(server)\n\n\t// for development purpose\n\t// npm run host, and npm run client\n\tReact.useEffect(() => {\n\t\tconsole.log(process.env.REACT_APP_AGENT)\n\t\tif (process.env.REACT_APP_AGENT === \"host\") {\n\t\t\tconst data = {numPlayers: 2, setupData: {test: true, numCats: 5, numTiles: 16}}\n\t\t\tcreateGame(data).then(x => {\n\t\t\t\tconsole.log(x.gameID)\n\t\t\t\tfetch(serverPath + \"/games/CamaewUp/\" + x.gameID + \"/join\", {\n\t\t\t\t\tmethod: \"post\",\n\t\t\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tplayerID: 0,\n\t\t\t\t\t\tplayerName: 'Host'\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\tstartGame(serverPath, x.gameID, 0, data.playerCredentials)\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t\telse if (process.env.REACT_APP_AGENT === \"client\") {\n\t\t\tfetch(serverPath + \"/games/CamaewUp/\")\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => {\n\t\t\t\t\tconst gameID = data.rooms.pop().gameID\n\t\t\t\t\tfetch(serverPath + \"/games/CamaewUp/\" + gameID + \"/join\", {\n\t\t\t\t\t\tmethod: \"post\",\n\t\t\t\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tplayerID: 1,\n\t\t\t\t\t\t\tplayerName: 'Client'\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\tstartGame(serverPath, gameID, 1, data.playerCredentials)\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t}\n\t}, [])\n\n\tfunction onServerPathChange(event) {\n\t\tsetServerPath(event.target.value);\n\t}\n\n\tfunction onNameChange(event) {\n\t\tsetName(event.target.value);\n\t}\n\n\tfunction onGameIDChange(event) {\n\t\tsetGameID(event.target.value)\n\t}\n\n\tfunction onNumPlayersChange(val) {\n\t\tsetnumPlayers(val)\n\t}\n\n\tfunction onNumCatsChange(val) {\n\t\tsetNumCats(val)\n\t}\n\n\tfunction onJoinClick() {\n\t\tsetLobbyState(\"join\")\n\t}\n\n\tfunction onCreateClick() {\n\t\tsetLobbyState(\"create\")\n\t}\n\n\tfunction onJoinJoinClick() {\n\t\t// console.log(\"Joining a game...\", gameID)\n\t\tjoinGame()\n\t}\n\n\tfunction onCreateCreateClick() {\n\t\t// console.log(\"Creating game...\")\n\t\tconst data = {numPlayers: numPlayers, setupData: {numCats: numCats, numTiles: 16}}\n\t\tcreateGame(data).then(x => {\n\t\t\t// console.log(\"Game created\", x.gameID)\n\t\t\tsetGameID(x.gameID)\n\t\t\tjoinGame()\n\t\t})\n\t}\n\n\t/**\n\t * Creates a game.\n\t *\n\t * @return     A promise to gameID.\n\t */\n\tfunction createGame(data) {\n\t\t// const opts = {numPlayers: numPlayers, setupData: {}}\n\t\t// console.log(\"Creating game...\")\n\t\treturn fetch(serverPath + \"/games/CamaewUp/create\", {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\tbody: JSON.stringify(data)\n\t\t})\n\t\t\t.then(response => response.json())\n\t}\n\n\t/**\n\t * Enters a game with a given gameID.\n\t * Note that this doesn't actually \"join\" the game\n\t * (i.e. pick a seat, get credentials, etc.), but\n\t * just enter into the room and display the information\n\t * (see who's there, which seats are available, etc.)\n\t *\n\t * @param      {string}  gameID  The game ID.\n\t */\n\tfunction joinGame() {\n\t\tsetLobbyState(\"wait\")\n\t}\n\n\tfunction backToEntry() {\n\t\tsetLobbyState(\"entry\")\n\t}\n\n\tconst data = {\n\t\tname: name,\n\t\tgameID: gameID,\n\t\tnumPlayers: numPlayers,\n\t\tnumCats: numCats,\n\t\tserverPath: serverPath,\n\t\tserverPathFull: serverPath + \"/games/CamaewUp\",\n\t\tonServerPathChange: onServerPathChange,\n\t\tonNameChange: onNameChange,\n\t\tonGameIDChange: onGameIDChange,\n\t\tonNumPlayersChange: onNumPlayersChange,\n\t\tonNumCatsChange: onNumCatsChange,\n\t\tbackToEntry: backToEntry,\n\t}\n\n\tif (lobbyState === \"entry\") {\n\t\treturn(<Entry data={data} onJoinClick={onJoinClick} onCreateClick={onCreateClick} />)\n\t}\n\telse if (lobbyState === \"join\") {\n\t\treturn(<Join data={data} onJoinJoinClick={onJoinJoinClick} />)\n\t}\n\telse if (lobbyState === \"create\") {\n\t\treturn(<Create data={data} onCreateCreateClick={onCreateCreateClick} />)\n\t}\n\telse if (lobbyState === \"wait\") {\n\t\t// console.log(\"name\", name)\n\t\treturn(<Wait data={data} startGame={startGame} />)\n\t}\n\n}\n","import React from 'react'\n\n\n\nexport default function BetCards({cards}) {\n\n\tfunction drag(e) {\n\t\te.dataTransfer.setData(\"betID\", e.target.getAttribute(\"bet_id\"))\n\t}\n\n\treturn(\n\t\t<div>\n\t\t\t<div className=\"section\">Bet Cards</div>\n\t\t\t\t<div className=\"flex\">\n\t\t\t\t{\n\t\t\t\t\tcards.map((x, i) => {\n\t\t\t\t\t\tif (x) {\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={`tokencolor-${i} betcard`}\n\t\t\t\t\t\t\t\t\t\tbet_id={i}\n\t\t\t\t\t\t\t\t\t\tdraggable=\"true\"\n\t\t\t\t\t\t\t\t\t\tonDragStart={drag}\n\t\t\t\t\t\t\t\t\t\tkey={\"betCards\" + i}>\n\t\t\t\t\t\t\t\t\tX\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\n\nexport default function Mod({hasMod, playerID}) {\n\n\tfunction drag(e) {\n\t\te.dataTransfer.setData(\"playerID\", e.target.getAttribute(\"player_id\"))\n\t\te.dataTransfer.setData(\"type\", \"place\")\n\t}\n\n\treturn(\n\t\t<div>\n\t\t\t<div className=\"section\">Mod Tile</div>\n\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"modcard\"\n\t\t\t\t\t\t\tdraggable={hasMod}\n\t\t\t\t\t\t\tplayer_id={playerID}\n\t\t\t\t\t\t\tonDragStart={drag}>\n\t\t\t\t\t\t{hasMod ? \"X\" : \"–\"}\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport BetCards from './BetCards'\nimport Mod from './Mod'\nimport CoinSVG from '../assets/coin.svg';\n\nfunction SmallBetTable({bets}) {\n\treturn(\n\t\t<React.Fragment>\n\t\t\t{\n\t\t\t\tbets.map((color, j) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<div className=\"flex\" key={\"smallBets\" + j}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcolor.map(card => {\n\t\t\t\t\t\t\t\t\treturn <div className={`tokencolor-${j} card`} key={\"smallbetcard\" + card}>{card}</div>\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t</React.Fragment>\n\t)\t\n}\n\nfunction Player({name, data, isCurrent}) {\n\treturn(\n\t\t<div className={`player-card xx ${isCurrent ? 'current' : ''}`}>\n\t\t\t<div>\n\t\t\t\t<img alt={name || \"Player\"} src={`https://api.adorable.io/avatars/100/${name || \"Player\"}.png`} />\n\t\t\t</div>\n\t\t\t<div className=\"player-details\">\n\t\t\t\t<div>\n\t\t\t\t\t{name || \"Player\"}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<img src={CoinSVG} alt=\"Coins\" height={16} /> {data.coins}\n\t\t\t\t</div>\n\t\t\t\t<SmallBetTable bets={data.smallBets}/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default function Players({playerID, currentPlayer, players, gameMetadata}) {\n\treturn(\n\t\t<div>\n\t\t\t{\n\t\t\t\t[...Array(players.length)].map((e, i) => {\n\t\t\t\t\tconst p = (playerID + 1 + i) % players.length\n\t\t\t\t\treturn <Player\n\t\t\t\t\t\t\t\t\t\tname={gameMetadata[p].name}\n\t\t\t\t\t\t\t\t\t\tdata={players[p]}\n\t\t\t\t\t\t\t\t\t\tisCurrent={currentPlayer === p}\n\t\t\t\t\t\t\t\t\t\tkey={\"player\" + p} />\n\t\t\t\t})\n\t\t\t}\n\t\t\t<BetCards cards={players[playerID].betCards} />\n\t\t\t<Mod hasMod={players[playerID].modPos === -1} playerID={playerID} />\n\t\t</div>\n\t)\n}\n","import React from 'react';\n\nexport default function Cell({cellData, cell_id, isExtra, playerID, gameMetadata, prePlaceMod, preMoveMod, preFlipMod}) {\n\n\tfunction allowDrop(e) {\n\t\te.preventDefault();\n\t}\n\n\tfunction drop(e) {\n\t\te.preventDefault();\n\t\tprePlaceMod(Number(cell_id), e.dataTransfer.getData(\"type\"))\n\t}\n\n\tfunction handleModClick() {\n\t\tpreFlipMod(Number(cell_id))\n\t}\n\n\tfunction drag(e) {\n\t\te.dataTransfer.setData(\"type\", \"move\")\n\t}\n\n\treturn (\n\t\t<div className={`cell ${isExtra ? 'cell-extra' : ''}`} onDragOver={allowDrop} onDrop={drop}>\n\t\t\t<div className=\"cell-content\">\n\t\t\t{/*\n\t\t\t\tcellData.stack.slice(0).reverse().map((x, i) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<div className={`token tokencolor-${x}`} key={\"cat_stack\" + i}>\n\t\t\t\t\t\t\t{catEmoji[x]}<br />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t*/}\n\t\t\t</div>\n\t\t\t{cellData.mod &&\n\t\t\t\t<div className={`cell-mod card ${cellData.mod.type}`}\n\t\t\t\t\t\tonClick={handleModClick}\n\t\t\t\t\t\tdraggable={playerID === cellData.mod.playerID}\n\t\t\t\t\t\tonDragStart={drag}>\n\t\t\t\t\t{gameMetadata[cellData.mod.playerID].name || '–'}\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n\n}","import React from 'react'\nimport Cell from './Cell'\nimport styles from './game.scss'\nimport {Button, Modal} from 'react-bootstrap'\nimport { useEffectListener } from 'bgio-effects/react';\n\nexport default function RaceTrack({G, playerID, gameMetadata, placeMod, moveMod, removeMod, flipMod}) {\n\n\tconst [showPlaceDialog, setShowPlaceDialog] = React.useState(false)\n\tconst [showFlipDialog, setShowFlipDialog] = React.useState(false)\n\tconst [cellID, setCellID] = React.useState(null)\n\tconst [type, setType] = React.useState(null)\n\n\tconst [cats, setCats] = React.useState(G.cats)\n\t\n\tfunction prePlaceMod(cellID, type) {\n\t\tif (type === \"place\" && G.players[playerID].modPos > -1) {\n\t\t\tconsole.error(\"Player has already placed his/her mod.\")\n\t\t\treturn\n\t\t}\n\t\tif (G.board[cellID].stack.length > 0) {\n\t\t\tconsole.error(\"Cannot place mod where cats are.\")\n\t\t\treturn\n\t\t}\n\t\tif ((cellID > 0 && G.board[cellID-1].mod !== null && G.board[cellID-1].mod.playerID !== playerID)\n\t\t\t\t|| (cellID < G.board.length - 1 && G.board[cellID+1].mod !== null && G.board[cellID+1].mod !== playerID)) {\n\t\t\tconsole.error(\"Cannot place mod adjacent to an existing mod.\")\n\t\t\treturn\n\t\t}\n\t\tif (G.board[cellID].mod !== null) {\n\t\t\tif (G.board[cellID].mod.playerID === playerID)\n\t\t\t\treturn\n\t\t\tconsole.error(\"Cannot place mod on top of an existing mod.\")\n\t\t\treturn\n\t\t}\n\t\tsetCellID(cellID)\n\t\tsetType(type)\n\t\tsetShowPlaceDialog(true)\n\t}\n\n\tfunction preFlipMod(cellID) {\n\t\tsetCellID(cellID)\n\t\tsetShowFlipDialog(true)\n\t}\n\n\tfunction PlaceDialog() {\n\t\treturn (\n\t\t\t<Modal show={showPlaceDialog} onHide={() => setShowPlaceDialog(false)}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Placing Mod</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>Which kind of mod would you like to place?</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={() => setShowPlaceDialog(false)}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"danger\" onClick={() => {\n\t\t\t\t\t\t\t// console.log(\"Place tape mod\")\n\t\t\t\t\t\t\tif (type === \"place\")\n\t\t\t\t\t\t\t\tplaceMod(playerID, cellID, \"tape\")\n\t\t\t\t\t\t\telse if (type === \"move\")\n\t\t\t\t\t\t\t\tmoveMod(playerID, cellID, \"tape\")\n\t\t\t\t\t\t\tsetShowPlaceDialog(false)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tTape\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"success\" onClick={() => {\n\t\t\t\t\t\t\t// console.log(\"Place cucumber mod\")\n\t\t\t\t\t\t\tif (type === \"place\")\n\t\t\t\t\t\t\t\tplaceMod(playerID, cellID, \"cucumber\")\n\t\t\t\t\t\t\telse if (type === \"move\")\n\t\t\t\t\t\t\t\tmoveMod(playerID, cellID, \"cucumber\")\n\t\t\t\t\t\t\tsetShowPlaceDialog(false)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tCucumber\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n\tfunction FlipDialog() {\n\t\treturn (\n\t\t\t<Modal show={showFlipDialog} onHide={() => setShowFlipDialog(false)}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Flipping Mod</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>Would you like to flip the mod?</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={() => setShowFlipDialog(false)}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"outline-primary\" onClick={() => {\n\t\t\t\t\t\t\t// console.log(\"Remove mod\")\n\t\t\t\t\t\t\tremoveMod(playerID)\n\t\t\t\t\t\t\tsetShowFlipDialog(false)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tRemove\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => {\n\t\t\t\t\t\t\t// console.log(\"Flip mod\")\n\t\t\t\t\t\t\tflipMod(playerID)\n\t\t\t\t\t\t\tsetShowFlipDialog(false)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tFlip\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n\tconst catEmoji = ['(ꏿ ᆺ ꏿ)', '(=^ ◡ ^=)', '(=✪ᆽ✪=)', '(=චᆽච=)', '(≗ᆽ≗)', '( ̿–ᆺ ̿–)']\n\n\tfunction getSize(name) {\n\t\treturn Number(styles[name].substring(0, styles[name].length - 2))\n\t}\n\n\t// getCSSSize('cellwidth')\n\tconst sz = {\n\t\tcell: {\n\t\t\twidth: getSize('cellwidth'),\n\t\t\theight: getSize('cellheight'),\n\t\t\tmargin: getSize('cellmargin'),\n\t\t},\n\t\ttoken: {\n\t\t\twidth: getSize('tokenwidth'),\n\t\t\theight: getSize('tokenheight'),\n\t\t\tmargin: getSize('tokenmargin'),\n\t\t}\n\t}\n\n\tfunction getCatPos(pos) {\n\t\treturn {left: `${pos[0]*(sz.cell.width + 2*sz.cell.margin) + sz.cell.margin + (sz.cell.width - sz.token.width)/2}px`,\n\t\t\t\t\t\ttop: `${sz.cell.height + sz.cell.margin - (pos[1] + 1) * (sz.token.height + sz.token.margin)}px`}\n\t}\n\n\tuseEffectListener('moveFwd', ({catID, roll, preCats, preBoard}) => {\n\n\t\tconsole.log('moveFwd fired')\n\n\t\tconst curCellNum = preCats[catID][0]\n\t\tlet tmpCats = preCats\n\t\tlet curStack = []\n\n\t\tconst curCell = preBoard[curCellNum].stack\n\t\tconst curLayer = curCell.indexOf(catID)\n\t\tcurStack = curCell.slice(curLayer)\n\n\t\t// update new cell\n\t\tconst destCellHeight = preBoard[curCellNum + 1 + roll].stack.length\n\t\tfor (let i = 0; i < curStack.length; i ++) {\n\t\t\ttmpCats[curStack[i]] = [curCellNum + 1 + roll, destCellHeight + i]\n\t\t}\n\n\t\tsetCats(tmpCats)\n\n\t}, []);\n\n\tuseEffectListener('modCucumber', ({cellNum, preCats, destHeight, stack}) => {\n\t\tlet tmpCats = preCats\n\t\tfor (let i = 0; i < stack.length; i ++) {\n\t\t\ttmpCats[stack[i]] = [cellNum + 1, destHeight + i]\n\t\t}\n\t\tsetCats(tmpCats)\n\t}, []);\n\n\tuseEffectListener('modTape', ({cellNum, preCats, prevStack, stack}) => {\n\t\tlet tmpCats = preCats\n\t\tfor (let i = 0; i < stack.length; i ++) {\n\t\t\ttmpCats[stack[i]] = [cellNum - 1, i]\n\t\t}\n\t\tfor (let i = 0; i < prevStack.length; i ++) {\n\t\t\ttmpCats[prevStack[i]][1] = stack.length + i\n\t\t}\n\t\tsetCats(tmpCats)\n\t}, []);\n\n\treturn(\n\t\t<React.Fragment>\n\n\t\t\t<div className=\"cell-container\">\n\t\t\t\t{\n\t\t\t\t\tG.board.map((cell, i) => <Cell\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcellData={cell}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell_id={i}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisExtra={i >= G.numTiles}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplayerID={playerID}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgameMetadata={gameMetadata}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprePlaceMod={prePlaceMod}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreFlipMod={preFlipMod}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tcats.map((x, i) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<div className={`cat tokencolor-${i}`}\n\t\t\t\t\t\t\t\t\tid={`cattoken-${i}`}\n\t\t\t\t\t\t\t\t\tkey={\"cat_stack_tmp\" + i}\n\t\t\t\t\t\t\t\t\tstyle={getCatPos(x)}>\n\t\t\t\t\t\t\t\t{catEmoji[i]}<br />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<PlaceDialog />\n\t\t\t<FlipDialog />\n\n\t\t</React.Fragment>\n\t)\n\n}\n","import React from 'react'\nimport {random} from 'lodash'\n\nimport { useEffectListener } from 'bgio-effects/react';\n\nexport default function Dice({rollClick, myTurn}) {\n\n\tconst [dice, setDice] = React.useState(null)\n\tconst [catID, setCatID] = React.useState(null)\n\tconst [z, setZ] = React.useState(myTurn)\n\n\tlet diceInterval = null\n\n\tuseEffectListener('roll', (catID) => {\n\t\tconsole.log('roll')\n\t\tsetCatID(catID)\n\t\tdiceInterval = setInterval(() => {\n\t\t\tsetDice(random(1, 3))\n\t\t}, 100)\n\t});\n\n\tuseEffectListener('rollDone', rollDoneHandler);\n\tuseEffectListener('rollReset', rollResetHandler);\n\n\tfunction rollDoneHandler(finalDice) {\n\t\tclearInterval(diceInterval)\n\t\tsetDice(finalDice)\n\t\tsetZ(false)\n\t}\n\n\tfunction rollResetHandler() {\n\t\tsetDice(null)\n\t\tsetCatID(null)\n\t}\n\n\tReact.useEffect(() => {\n\t\tsetZ(myTurn)\n\t\tif (!myTurn) {\n\t\t\trollDoneHandler()\n\t\t\trollResetHandler()\n\t\t}\n\t}, [myTurn])\n\n\treturn(\n\t\t<div id=\"dice-wrapper\" className=\"center\">\n\t\t\t<div id=\"main-dice\" className={`rolled-dice ${z ? 'active' : ''}`}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tif (z) {\n\t\t\t\t\t\t\trollClick()\n\t\t\t\t\t\t}\n\t\t\t\t\t}}>\n\t\t\t\t{dice\n\t\t\t\t\t? <div className={`center-table dice-size tokencolor-${catID}`}>{dice}</div>\n\t\t\t\t\t: <div className=\"center-table circle-shape empty-area dice-size\">Roll</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport {random, cloneDeep} from 'lodash'\nimport { useEffectListener } from 'bgio-effects/react';\n\nexport default function CardStack({label, stack, cardClass, stackClass, clickHandler, doubleClickHandler, dragOverHandler, dropHandler}) {\n\n\tconst [z, setZ] = React.useState([])\n\n\tfunction genRandomArray(l) {\n\t\tlet tmp = Array(l)\n\t\tfor (let i = 0; i < l; i ++) {\n\t\t\ttmp[i] = random(-7.5, 7.5, true)\n\t\t}\n\t\treturn tmp\n\t}\n\n\tReact.useEffect(() => {\n\t\tif (stackClass && stackClass === 'betzone-win') {\n\t\t\tconsole.log(stack)\n\t\t}\n\t\tif (stack.length > z.length) {\n\t\t\tsetZ(z.concat(genRandomArray(stack.length - z.length)))\n\t\t}\n\t\telse {\n\t\t\tsetZ(z.slice(0, stack.length))\n\t\t}\n\t}, [stack])\n\n\tuseEffectListener('endSmallRound', () => {\n\t\tsetZ(genRandomArray(stack.length))\n\t})\n\n\t// listen to event that would random thie thing\n\n\treturn(\n\t\t<div className={\"small-stack \" + (stackClass || '')}\n\t\t\t\tonClick={clickHandler}\n\t\t\t\tonDragOver={dragOverHandler}\n\t\t\t\tonDrop={dropHandler}>\n\t\t\t<div className=\"card-shape empty-area center di-table\">\n\t\t\t\t<div className=\"center-table\">\n\t\t\t\t\t{label}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{stack.map((x, i) => {\n\t\t\t\treturn(\n\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={\"card-standard card-shape center di-table \" + (cardClass || '')}\n\t\t\t\t\t\t\tkey={\"small-card\" + i}\n\t\t\t\t\t\t\tstyle={{transform: `rotate(${z ? z[i] : 0}deg) translateX(-50%)`,\n\t\t\t\t\t\t\t\t\ttransformOrigin: `0% 50%`}}>\n\t\t\t\t\t\t<div className=\"center-table\">\n\t\t\t\t\t\t\t{x}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n\n}","import React from 'react'\nimport Dice from './Dice'\nimport {random} from 'lodash'\nimport CardStack from './CardStack'\n\nimport { useEffectListener } from 'bgio-effects/react';\n\nexport default function Camp({stack, dice, makeSmallBet, rollClick, myTurn}) {\n\n\tconst space = 15\n\n\tconst [diceUI, setDiceUI] = React.useState(dice)\n\n\tuseEffectListener('rollReset', (finalDice) => {\n\t\tconsole.log('reset heard by camp')\n\t\tsetDiceUI(finalDice)\n\t}, []);\n\n\treturn(\n\t\t<div id=\"camp\">\n\t\t\t{\n\t\t\t\t[...Array(stack.length)].map((e, i) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<div className=\"tent\" key={\"tent\" + i}\n\t\t\t\t\t\t\t\tstyle={{transform: `translateX(-50%) rotate(${-space * (stack.length - 1) / 2 + space * i}deg)`}} >\n\t\t\t\t\t\t\t<CardStack\n\t\t\t\t\t\t\t\t\tstack={stack[i]}\n\t\t\t\t\t\t\t\t\tcardClass={`tokencolor-${i}`}\n\t\t\t\t\t\t\t\t\tclickHandler={() => {\n\t\t\t\t\t\t\t\t\t\tif (myTurn && stack[i].length > 0)\n\t\t\t\t\t\t\t\t\t\t\tmakeSmallBet(i)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tdoubleClickHandler={9} />\n\t\t\t\t\t\t\t<div className={`rolled-dice ${diceUI[i] && `tokencolor-${i}`}`}>\n\t\t\t\t\t\t\t\t{diceUI[i]\n\t\t\t\t\t\t\t\t\t? <div className=\"center-table\">{diceUI[i]}</div>\n\t\t\t\t\t\t\t\t\t: <div className=\"center-table circle-shape empty-area\"></div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t\t<Dice rollClick={rollClick} myTurn={myTurn} />\n\t\t</div>\n\t)\n}","import React from 'react'\nimport CardStack from './CardStack'\nimport {random, cloneDeep} from 'lodash'\n\nexport default function BetArea({bigStack, playerID, makeBigBet}) {\n\n\tfunction allowDrop(e) {\n\t\te.preventDefault();\n\t}\n\n\tfunction handleBigBetDrop(e, side) {\n\t\te.preventDefault();\n\t\tmakeBigBet(playerID, Number(e.dataTransfer.getData(\"betID\")), side)\n\t}\n\n\treturn(\n\n\t\t<div id=\"betarea\">\n\t\t\t<CardStack\n\t\t\t\t\t\t\tlabel={'L'}\n\t\t\t\t\t\t\tstackClass={`betzone-lose`}\n\t\t\t\t\t\t\tstack={Array(bigStack.lose.length).fill('Y')}\n\t\t\t\t\t\t\tdragOverHandler={allowDrop}\n\t\t\t\t\t\t\tdropHandler={(e) => handleBigBetDrop(e, 'lose')} />\n\t\t\t<CardStack\n\t\t\t\t\t\t\tlabel={'W'}\n\t\t\t\t\t\t\tstackClass={`betzone-win`}\n\t\t\t\t\t\t\tstack={Array(bigStack.win.length).fill('Y')}\n\t\t\t\t\t\t\tdragOverHandler={allowDrop}\n\t\t\t\t\t\t\tdropHandler={(e) => handleBigBetDrop(e, 'win')} />\n\t\t</div>\n\n\t)\n\n}","import React from 'react'\nimport Players from './Players'\nimport RaceTrack from './RaceTrack'\nimport Camp from './Camp'\nimport BetArea from './BetArea'\n\nimport './game.css'\n\nexport default function GameScreen({G, ctx, moves, playerID, gameMetadata, gameID, ...rest}) {\n\n\t// convert string back to number for easier processing\n\tplayerID = Number(playerID)\n\n\treturn (\n\t\t<div id=\"game\">\n\n\t\t\t<div className=\"panel\" id=\"main\">\n\t\t\t\t<Camp\n\t\t\t\t\t\tstack={G.smallStack}\n\t\t\t\t\t\tdice={G.dice}\n\t\t\t\t\t\tmakeSmallBet={bet => moves.makeSmallBet(playerID, bet)}\n\t\t\t\t\t\trollClick={() => moves.roll(playerID)}\n\t\t\t\t\t\tmyTurn={playerID === Number(ctx.currentPlayer)} />\n\t\t\t\t<BetArea\n\t\t\t\t\t\tbigStack={G.bigStack}\n\t\t\t\t\t\tplayerID={playerID}\n\t\t\t\t\t\tmakeBigBet={moves.makeBigBet} />\t\t\t\n\t\t\t</div>\n\n\t\t\t<div className=\"panel\" id=\"players\">\n\t\t\t\t<Players\n\t\t\t\t\t\tplayerID={playerID}\n\t\t\t\t\t\tcurrentPlayer={Number(ctx.currentPlayer)}\n\t\t\t\t\t\tplayers={G.players}\n\t\t\t\t\t\tgameMetadata={gameMetadata} />\n\t\t\t</div>\n\n\t\t\t<div className=\"panel\" id=\"board\">\n\t\t\t\t<RaceTrack\n\t\t\t\t\t\tG={G}\n\t\t\t\t\t\tplayerID={playerID}\n\t\t\t\t\t\tgameMetadata={gameMetadata}\n\t\t\t\t\t\tplaceMod={moves.placeMod}\n\t\t\t\t\t\tmoveMod={moves.moveMod}\n\t\t\t\t\t\tremoveMod={moves.removeMod}\n\t\t\t\t\t\tflipMod={moves.flipMod} />\n\t\t\t</div>\n\n\t\t</div>\n\t)\n}","import React, {useState, useEffect} from 'react'\nimport {Client} from 'boardgame.io/react'\nimport {SocketIO} from 'boardgame.io/multiplayer'\nimport CamaewUp from './CamaewUp'\nimport Lobby from './lobby/Lobby'\nimport GameScreen2 from './game/GameScreen'\nimport { createBrowserHistory } from 'history'\nimport ReactGA from 'react-ga'\nimport { EffectsBoardWrapper } from 'bgio-effects/react';\n\nimport './style.css'\n\nlet CamaewUpClient = null\n\nconst history = createBrowserHistory()\n\nReactGA.initialize('UA-2995735-5')\nReactGA.pageview(window.location.pathname + window.location.search)\n\nfunction App() {\n\n\tconst [state, setState] = useState(\"lobby\");\n\tconst [data, setData] = useState({})\n\n\tfunction startGame(serverPath, gameID, playerID, credentials) {\n\t\tsetData({gameID: gameID, playerID: playerID, credentials: credentials})\n\t\tconst board = EffectsBoardWrapper(GameScreen2, {\n\t\t  // Delay passing the updated boardgame.io state to your board\n\t\t  // until after the last effect has been triggered.\n\t\t  // Default: false\n\t\t  updateStateAfterEffects: true});\n\t\tCamaewUpClient = Client({game: CamaewUp,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tboard: board,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmultiplayer: SocketIO({server: serverPath}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdebug: false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\tsetState(\"game\")\n\t}\n\n\tuseEffect(() => {\n\t\tif (state.name === \"game\") {\n\t\t\thistory.push('?' + state.gameID)\n\t\t}\n\t}, [state.name, state.gameID])\n\n\tif (state === \"lobby\") {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Lobby startGame={startGame}/>\n\t\t\t</div>\n\t\t)\n\t}\n\telse if (state === \"game\") {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<CamaewUpClient gameID={data.gameID}\n\t\t\t\t\t\t\t\t\t\t\t\tplayerID={String(data.playerID)}\n\t\t\t\t\t\t\t\t\t\t\t\tcredentials={data.credentials} />\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cellwidth\":\"120px\",\"cellheight\":\"120px\",\"cellmargin\":\"3px\",\"tokenwidth\":\"80px\",\"tokenheight\":\"30px\",\"tokenmargin\":\"5px\"};","module.exports = __webpack_public_path__ + \"static/media/coin.33f54324.svg\";"],"sourceRoot":""}