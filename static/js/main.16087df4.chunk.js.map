{"version":3,"sources":["CamaewUp.js","effects-config.js","lobby/Entry.js","lobby/Join.js","lobby/Create.js","lobby/Wait.js","lobby/Lobby.js","game/Cell.js","game/RaceTrack.js","game/Players.js","game/RolledDice.js","game/SmallStack.js","game/BetCards.js","game/BetZone.js","game/Mod.js","game/LogArea.js","game/GameScreen.js","App.js","index.js"],"names":["genArray","size","data","a","Array","i","cloneDeep","rankCats","G","indices","from","numCats","x","sort","b","cats","resetSmallRound","ctx","dice","fill","numPlayers","players","smallBets","removeMod","smallStack","scoreSmallRound","rank","smallBetWins","sum","length","j","coins","rollDice","playerID","numDiceLeft","filter","dieRolled","random","Die","roll","lastDiceRolled","console","error","catID","curCellNum","curStack","curCell","board","stack","curLayer","indexOf","slice","destCellHeight","concat","cleanUp","moveCat","placeMod","cellID","type","mod","modPos","log","message","logArray","push","CamaewUp","name","plugins","EffectsPlugin","effects","endTurn","create","duration","rollDone","something","setup","setupData","numTiles","betCards","bigStack","move","text","moves","preDice","dest","resolveBoard","winnings","win","curBet","bet","pop","losings","lose","scoreRace","maxCoins","winners","getWinners","makeSmallBet","card","makeBigBet","side","flipMod","newType","moveMod","turn","moveLimit","onEnd","onMove","minPlayers","maxPlayers","Entry","onJoinClick","onCreateClick","id","className","Form","Label","Control","value","serverPath","onChange","onServerPathChange","Button","variant","onClick","Join","onJoinJoinClick","onNameChange","gameID","onGameIDChange","disabled","backToEntry","Create","onCreateCreateClick","ToggleButtonGroup","onNumPlayersChange","ToggleButton","onNumCatsChange","Check","label","Wait","showState","setShowState","startGame","React","useState","gameInfo","setGameInfo","setNumPlayers","setPlayerID","playerCredentials","setPlayerCredentials","showConfirmLeave","setShowConfirmLeave","updateGameInfo","useCallback","fetch","serverPathFull","method","then","response","json","findSeat","sit","seatID","opts","playerName","roomID","headers","body","JSON","stringify","stand","updateAfter","credentials","useEffect","interval","setInterval","clearInterval","count","map","key","undefined","header","confirm","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Lobby","setName","lobbyState","setLobbyState","setGameID","setnumPlayers","setNumCats","setServerPath","createGame","joinGame","process","REACT_APP_AGENT","test","rooms","event","target","val","Cell","cellData","cell_id","isExtra","gameMetadata","prePlaceMod","preFlipMod","preMoveMod","catEmoji","onDragOver","e","preventDefault","onDrop","Number","dataTransfer","getData","reverse","draggable","onDragStart","setData","RaceTrack","showPlaceDialog","setShowPlaceDialog","showFlipDialog","setShowFlipDialog","setCellID","setType","PlaceDialog","FlipDialog","Fragment","cell","Players","currentPlayer","ListGroup","Item","active","color","RolledDice","diceUI","setDiceUI","diceInterval","useEffectListener","array","index","tmp","replaceElement","finalDice","horizontal","SmallStack","BetCards","cards","drag","getAttribute","bet_id","BetZone","Mod","hasMod","player_id","LogArea","logArea","useRef","current","scrollTop","scrollHeight","ref","GameScreen","CamaewUpClient","history","createBrowserHistory","ReactGA","initialize","pageview","window","location","pathname","search","App","state","setState","EffectsBoardWrapper","updateStateAfterEffects","Client","game","multiplayer","SocketIO","server","debug","String","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16087df4.chunk.js","sourcesContent":["import {sum, cloneDeep} from 'lodash'\nimport { EffectsPlugin } from 'bgio-effects/plugin';\nimport { config } from './effects-config';\n\nfunction genArray(size, data) {\n\tlet a = new Array(size );\n\tfor (let i = 0; i < size; i ++) {\n\t\ta[i] = cloneDeep(data);\n\t}\n\treturn a\n}\n\nfunction rankCats(G) {\n\tlet indices = Array.from(new Array(G.numCats), (x, i) => i)\t\n\tindices.sort((a, b) => (G.cats[b][0] - G.cats[a][0]) * 100 + (G.cats[b][1] - G.cats[a][1]));\t\n\treturn indices\n}\n\nfunction resetSmallRound(G, ctx) {\n\t// reset dice\n\tG.dice = Array(G.numCats).fill(0)\n\n\tfor (let i = 0; i < ctx.numPlayers; i ++) {\n\t\tG.players[i].smallBets = Array(G.numCats).fill([])\n\t\tremoveMod(G, i)\n\t}\n\n\tG.smallStack = Array(G.numCats).fill([2, 3, 5])\n\n}\n\nfunction scoreSmallRound(G, ctx) {\n\t// console.log(\"End of small round.\")\n\n\t// reset dice\n\tG.dice = Array(G.numCats).fill(0)\n\n\t// get ranks\n\tconst rank = rankCats(G)\n\n\tfor (let i = 0; i < ctx.numPlayers; i ++) {\n\t\t\n\t\t// small bets\n\t\tlet smallBetWins = 0\n\t\tsmallBetWins += sum(G.players[i].smallBets[rank[0]])\n\t\tsmallBetWins += G.players[i].smallBets[rank[1]].length\n\t\tfor (let j = 2; j < G.numCats; j ++) {\n\t\t\tsmallBetWins -= G.players[i].smallBets[rank[j]].length\t\n\t\t}\n\t\t// console.log(\"Small bet wins for\", i, smallBetWins)\n\t\tG.players[i].coins += smallBetWins\n\t\t// G.players[i].smallBets = Array(G.numCats).fill([])\n\t\n\t\t// remove mods\n\t\t// removeMod(G, i)\n\n\t}\n\n\t// G.smallStack = Array(G.numCats).fill([2, 3, 5])\n\n}\n\nfunction scoreRace(G, ctx) {\n\t// console.log(\"End of race.\")\n\tconst rank = rankCats(G)\n\n\t// winning pile\n\tlet winnings = [1, 2, 3, 5, 8]\n\tfor (let i = 0; i < G.bigStack.win.length; i ++) {\n\t\tconst curBet = G.bigStack.win[i]\n\t\tif (curBet.bet === rank[0]) {\n\t\t\t// winning bet\n\t\t\tG.players[curBet.playerID].coins += winnings.pop()\n\t\t}\n\t\telse {\n\t\t\tG.players[curBet.playerID].coins -= 1\n\t\t}\n\t\tif (winnings.length === 0)\n\t\t\twinnings = [1]\n\t}\n\n\t// losing pile\n\tlet losings = [1, 2, 3, 5, 8]\n\tfor (let i = 0; i < G.bigStack.lose.length; i ++) {\n\t\tconst curBet = G.bigStack.lose[i]\n\t\tif (curBet.bet === rank[G.numCats - 1]) {\n\t\t\t// winning bet\n\t\t\tG.players[curBet.playerID].coins += losings.pop()\n\t\t}\n\t\telse {\n\t\t\tG.players[curBet.playerID].coins -= 1\n\t\t}\n\t\tif (losings.length === 0)\n\t\t\tlosings = [1]\n\t}\n\n}\n\nfunction getWinners(G) {\n\tlet maxCoins = [G.players[0].coins]\n\tlet winners = [0]\n\tfor (let i = 1; i < G.numPlayers; i ++) {\n\t\tif (G.players[i].coins > maxCoins) {\n\t\t\tmaxCoins = G.players[i].coins\n\t\t\twinners = [i]\n\t\t}\n\t\telse if (G.players[i].coins === maxCoins) {\n\t\t\twinners.push(i)\n\t\t}\n\t}\n\treturn winners\n}\n\nfunction moveCat(G, ctx, catID, roll) {\n\n\tconst curCellNum = G.cats[catID][0]\n\n\tlet curStack = []\n\n\t// check if the cat in question is already on the board\n\tif (curCellNum >= 0) {\n\t\tconst curCell = G.board[curCellNum].stack\n\t\tconst curLayer = curCell.indexOf(catID)\n\t\tcurStack = curCell.slice(curLayer)\n\t\t// update old cell\n\t\tG.board[curCellNum].stack = G.board[curCellNum].stack.slice(0, curLayer)\n\t}\n\t// if not then there's no need to worry about cats stacked on top\n\telse {\n\t\tcurStack = [catID]\n\t}\n\n\t// update new cell\n\tconst destCellHeight = G.board[curCellNum + roll].stack.length\n\tG.board[curCellNum + roll].stack = G.board[curCellNum + roll].stack.concat(curStack)\n\tfor (let i = 0; i < curStack.length; i ++) {\n\t\t// G.pos[curStack[i]] += roll\n\t\tG.cats[curStack[i]] = [curCellNum + roll, destCellHeight + i]\n\t}\n\n\tG.cleanUp = curCellNum + roll\n\n}\n\nfunction resolveBoard(G, ctx) {\n\n\tconst mod = G.board[G.cleanUp].mod\n\n\tif (mod !== null) {\n\t\tlog(G, {move: \"mod\", mod: mod.type})\n\t\tG.players[mod.playerID].coins += 1\n\t\tconst curStack = G.board[G.cleanUp].stack\n\t\tG.board[G.cleanUp].stack = []\n\t\tlet dest = 999\n\n\t\tif (mod.type === \"tape\") {\n\t\t\tdest = G.cleanUp - 1\n\t\t\tG.board[dest].stack = curStack.concat(G.board[dest].stack)\n\t\t}\n\t\telse if (mod.type === \"cucumber\") {\n\t\t\tdest = G.cleanUp + 1\n\t\t\tG.board[dest].stack = G.board[dest].stack.concat(curStack)\n\t\t}\n\n\t\t// for (let i = 0; i < curStack.length; i ++) {\n\t\t// \tG.pos[curStack[i]] = dest\n\t\t// }\n\t\tfor (let i = 0; i < G.board[dest].stack.length; i ++) {\n\t\t\tG.cats[G.board[dest].stack[i]] = [dest, i]\n\t\t}\n\t}\n\n}\n\nfunction rollDice(G, ctx, playerID) {\n\n\t// random dice first\n\tconst numDiceLeft = G.dice.filter(x => x === 0).length\n\tconst dieRolled = ctx.random.Die(numDiceLeft) - 1\n\tconst roll = ctx.random.Die(3)\n\tlet i = 0\n\tlet j = 0\n\tfor (j = 0; j < G.numCats; j ++) {\n\t\tif (G.dice[j] === 0) {\n\t\t\tif (i === dieRolled) {\n\t\t\t\tG.dice[j] = roll;\n\t\t\t\tG.lastDiceRolled = j;\n\t\t\t\tbreak\n\t\t\t}\n\t\t\ti ++\n\t\t}\n\t}\n\tif (j === G.numCats) {\n\t\tconsole.error(\"Something's wrong. The dice probably didn't get reset.\")\n\t}\n\n\t// move cat `j`` by `roll` accordingly\n\tmoveCat(G, ctx, j, roll)\n\tif (playerID != null)\n\t\tG.players[playerID].coins += 1\n\n\treturn [j, roll]\n\n}\n\nfunction makeSmallBet(G, playerID, bet) {\n\tconst card = G.smallStack[bet].pop()\n\tG.players[playerID].smallBets[bet].push(card)\n\treturn card\n}\n\nfunction makeBigBet(G, playerID, bet, side) {\n\tG.bigStack[side].push({playerID: playerID, bet: bet})\n\tG.players[playerID].betCards[bet] = false\n}\n\nfunction placeMod(G, playerID, cellID, type) {\n\tG.board[cellID].mod = {playerID: playerID, type: type}\n\tG.players[playerID].modPos = cellID\n}\n\nfunction removeMod(G, playerID) {\n\tif (G.players[playerID].modPos > -1) {\n\t\tG.board[G.players[playerID].modPos].mod = null\n\t\tG.players[playerID].modPos = -1\t\n\t}\n}\n\nfunction log(G, message) {\n\tG.logArray.push(message)\n}\n\nconst CamaewUp = {\n\tname: \"CamaewUp\",\n\tplugins: [EffectsPlugin(config)],\n\tsetup: (ctx, setupData) => {\n\t\tlet G = {\n\t\t\tdice: Array(setupData.numCats).fill(0),\n\t\t\t// pos: Array(setupData.numCats).fill(-1),\n\t\t\tcats: Array(setupData.numCats).fill([-1, -1]),\n\t\t\tboard: genArray(setupData.numTiles + 3, {stack: [], mod: null}),\n\t\t\tplayers: genArray(ctx.numPlayers, {coins: 3,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsmallBets: Array(setupData.numCats).fill([]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbetCards: Array(setupData.numCats).fill(true),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodPos: -1}),\n\t\t\tsmallStack: Array(setupData.numCats).fill([2, 3, 5]),\n\t\t\tbigStack: {\"win\": [], \"lose\": []},\n\t\t\tlogArray: [],\n\t\t\tnumCats: setupData.numCats,\n\t\t\tnumTiles: setupData.numTiles,\n\t\t\tnumPlayers: ctx.numPlayers,\n\t\t\tlastDiceRolled: -1,\n\t\t\tcleanUp: -1,\n\t\t\t// latestMove: [],\n\t\t}\n\t\tlog(G, {move: \"text\", text: \"Welcome!\"})\n\n\t\tfor (let i = 0; i < G.numCats; i ++)\n\t\t\trollDice(G, ctx)\n\t\tresetSmallRound(G, ctx)\n\t\treturn G\n\t},\n\tmoves: {\n\t\troll: (G, ctx, playerID) => {\n\t\t\tconst preDice = G.dice.slice()\n\t\t\tconst [catID, roll] = rollDice(G, ctx, playerID)\n\t\t\tctx.effects.roll({catID: catID, preDice: preDice})\n\t\t\tctx.effects.rollDone(G.dice.slice())\n\t\t\tlog(G, {playerID: playerID, move: \"roll\", catID: catID, roll: roll})\n\t\t\t// G.latestMove = [[\"roll\", catID, roll]]\n\t\t\tresolveBoard(G, ctx)\n\t\t\t// if (mod !== null) {\n\t\t\t\t// log(G, {move: \"mod\", mod: mod})\n\t\t\t\t// G.latestMove.push([\"mod\", mod])\n\t\t\t// }\n\t\t\tif (G.cleanUp >= G.numTiles) {\n\t\t\t\t// end game\n\t\t\t\tscoreSmallRound(G, ctx)\n\t\t\t\tscoreRace(G, ctx)\n\t\t\t\tconst winners = getWinners(G)\n\t\t\t\tlog(G, {move: \"text\", text: \"Winners: \" + winners})\n\t\t\t\tlog(G, {move: \"text\", text: \"--- End of game ---\"})\n\t\t\t}\n\t\t\tif (G.dice.filter(x => x === 0).length === 0) {\n\t\t\t\tlog(G, {move: \"text\", text: \"--- End of small round ---\"})\n\t\t\t\tscoreSmallRound(G, ctx)\n\t\t\t\tresetSmallRound(G, ctx)\n\t\t\t}\n\t\t},\n\t\tmakeSmallBet: (G, ctx, playerID, bet) => {\n\t\t\tconst card = makeSmallBet(G, playerID, bet)\n\t\t\tlog(G, {playerID: playerID, move: \"smallBet\", catID: bet, card: card})\n\t\t},\n\t\tmakeBigBet: (G, ctx, playerID, bet, side) => {\n\t\t\tmakeBigBet(G, playerID, bet, side)\n\t\t\tlog(G, {playerID: playerID, move: \"bigBet\", side: side})\n\t\t},\n\t\tplaceMod: (G, ctx, playerID, cellID, type) => {\n\t\t\tplaceMod(G, playerID, cellID, type)\n\t\t\tlog(G, {playerID: playerID, move: \"placeMod\", cellID: cellID, type: type})\n\t\t},\n\t\tremoveMod: (G, ctx, playerID) => {\n\t\t\tremoveMod(G, playerID)\n\t\t\tlog(G, {playerID: playerID, move: \"removeMod\", cellID: G.players[playerID].modPos})\n\t\t},\n\t\tflipMod: (G, ctx, playerID) => {\n\t\t\tconst newType = G.board[G.players[playerID].modPos].mod.type === \"tape\" ? \"cucumber\" : \"tape\"\n\t\t\tconst cellID = G.players[playerID].modPos\n\t\t\tremoveMod(G, playerID)\n\t\t\tplaceMod(G, playerID, cellID, newType)\n\t\t\tlog(G, {playerID: playerID, move: \"flipMod\", cellID: G.players[playerID].modPos})\n\t\t},\n\t\tmoveMod: (G, ctx, playerID, cellID, type) => {\n\t\t\tremoveMod(G, playerID)\n\t\t\tplaceMod(G, playerID, cellID, type)\n\t\t\tlog(G, {playerID: playerID, move: \"placeMod\", cellID: cellID, type: type})\n\t\t}\n\t},\n\tturn: {\n\t\tmoveLimit: 1,\n\t\tonEnd: (G, ctx) => {\n\t\t},\n\t\tonMove: (G, ctx) => {\n\t\t}\n\t},\n\tminPlayers: 2,\n\tmaxPlayers: 8\n}\n\nexport default CamaewUp;","export const config = {\n\t// Declare the effect types you need.\n\teffects: {\n\t\t// Each effect is named by its key.\n\t\t// This creates a zero-config endTurn effect:\n\t\tendTurn: {},\n\n\t\troll: {\n\t\t\tcreate: (data) => (data),\n\t\t\tduration: 1,\n\t\t},\n\t\trollDone: {\n\t\t\tcreate: (data) => (data),\n\t\t},\n\t\tsomething: {}\n\t},\n};","import React from 'react'\nimport {Button, Form} from 'react-bootstrap'\n\nexport default function Entry({data, onJoinClick, onCreateClick}) {\n\n\treturn(\n\t\t<div id=\"entry-container\" className=\"lobby\">\n\t\t\t<div id=\"entry-server\">\n\t\t\t\t<Form.Label>Server</Form.Label>\n\t\t\t\t<Form.Control type=\"text\" value={data.serverPath} onChange={data.onServerPathChange} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button variant=\"primary\" onClick={onJoinClick} size=\"lg\">Join Game</Button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button variant=\"primary\" onClick={onCreateClick} size=\"lg\">Create Game</Button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport {Button, Form} from 'react-bootstrap'\n\n// function Join({onJoinJoinClick, onGameIDChange, gameID}) {\nexport default function Join({data, onJoinJoinClick}) {\n\n\treturn(\n\t\t<div className=\"lobby\">\n\t\t\t<div>\n\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t<Form.Control type=\"text\" value={data.name} onChange={data.onNameChange} />\n\t\t\t</div>\n\t\t\t<div id=\"join-gameid\">\n\t\t\t\t<Form.Label>Game ID</Form.Label>\n\t\t\t\t<Form.Control type=\"text\" value={data.gameID} onChange={data.onGameIDChange} />\n\t\t\t</div>\n\t\t\t<div id=\"lobby-join\" className=\"center\">\n\t\t\t\t<Form.Label>Join Game</Form.Label>\n\t\t\t\t<Button variant=\"primary\" onClick={onJoinJoinClick} disabled={!data.gameID || !data.name}>Join</Button>\n\t\t\t\t<Button variant=\"secondary\" onClick={data.backToEntry}>Back</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n}\n","import React from 'react'\nimport {Button, Form, ToggleButtonGroup, ToggleButton} from 'react-bootstrap'\n\nexport default function Create({data, onCreateCreateClick}) {\n\n\treturn(\n\t\t<div className=\"lobby\">\n\t\t\t<div>\n\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t<Form.Control type=\"text\" value={data.name} onChange={data.onNameChange} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Form.Label>Number of players</Form.Label>\n\t\t\t\t<ToggleButtonGroup type=\"radio\" name=\"numPlayers\" value={data.numPlayers} onChange={data.onNumPlayersChange}>\n\t\t\t\t\t<ToggleButton value={2}>2</ToggleButton>\n\t\t\t\t\t<ToggleButton value={3}>3</ToggleButton>\n\t\t\t\t\t<ToggleButton value={4}>4</ToggleButton>\n\t\t\t\t\t<ToggleButton value={5}>5</ToggleButton>\n\t\t\t\t\t<ToggleButton value={6}>6</ToggleButton>\n\t\t\t\t\t<ToggleButton value={7}>7</ToggleButton>\n\t\t\t\t\t<ToggleButton value={8}>8</ToggleButton>\n\t\t\t\t</ToggleButtonGroup>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Form.Label>Number of cats</Form.Label>\n\t\t\t\t<ToggleButtonGroup type=\"radio\" name=\"numCats\" value={data.numCats} onChange={data.onNumCatsChange}>\n\t\t\t\t\t<ToggleButton value={3}>3</ToggleButton>\n\t\t\t\t\t<ToggleButton value={4}>4</ToggleButton>\n\t\t\t\t\t<ToggleButton value={5}>5</ToggleButton>\n\t\t\t\t\t<ToggleButton value={6}>6</ToggleButton>\n\t\t\t\t</ToggleButtonGroup>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Form.Check type=\"checkbox\" label=\"Veil mode\" />\n\t\t\t\t<Form.Check type=\"checkbox\" label=\"Random seat\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button variant=\"primary\" onClick={onCreateCreateClick} disabled={!data.name}>Create</Button>\n\t\t\t\t<Button variant=\"secondary\" onClick={data.backToEntry}>Back</Button>\n\t\t\t</div>\n\t\t</div>\n\t)\n\n}\n","import React from 'react'\nimport {Button, Modal} from 'react-bootstrap'\n\nexport default function Wait({data, startGame}) {\n\n\tconst [gameInfo, setGameInfo] = React.useState(null)\n\tconst [numPlayers, setNumPlayers] = React.useState(0)\n\tconst [playerID, setPlayerID] = React.useState(-1)\n\tconst [playerCredentials, setPlayerCredentials] = React.useState(\"\")\n\tconst [showConfirmLeave, setShowConfirmLeave] = React.useState(false)\n\n\t// no idea why we need to use useCallback() :P\n\t\n\tconst updateGameInfo = React.useCallback(() => {\n\t\t// console.log(\"Getting game info...\", data.gameID)\n\t\tfetch(data.serverPathFull + \"/\" + data.gameID, {\n\t\t\tmethod: \"get\"\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => setGameInfo(data))\n\t}, [data.gameID, data.serverPathFull])\n\n\tconst findSeat = React.useCallback(() => {\n\t\tupdateGameInfo()\n\t\tfor (let id=0; id < gameInfo.players.length; id ++) {\n\t\t\tif (gameInfo.players[id].name == null) {\n\t\t\t\treturn id\n\t\t\t}\n\t\t}\n\t}, [gameInfo, updateGameInfo])\n\n\tconst sit = React.useCallback(() => {\n\t\t// console.log(\"Sitting...\", gameInfo)\n\t\tconst seatID = findSeat()\n\t\t// console.log(\"Found empty seat\", seatID)\n\t\tconst opts = {\n\t\t\tplayerID: seatID,\n\t\t\tplayerName: data.name\n\t\t}\n\t\tfetch(data.serverPathFull + \"/\" + gameInfo.roomID + \"/join\", {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\tbody: JSON.stringify(opts)\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tsetPlayerCredentials(data.playerCredentials)\n\t\t\t\tsetPlayerID(seatID)\n\t\t\t\tupdateGameInfo()\n\t\t\t})\n\t}, [data.name, findSeat, gameInfo, data.serverPathFull, updateGameInfo])\n\n\tReact.useEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tupdateGameInfo();\n\t\t}, 2000);\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t});\n\n\tReact.useEffect(() => {\n\t\tif (gameInfo != null) {\n\t\t\tsetNumPlayers(() => {\n\t\t\t\tlet count = 0\n\t\t\t\tfor (let id=0; id < gameInfo.players.length; id ++) {\n\t\t\t\t\tif (gameInfo.players[id].name != null) {\n\t\t\t\t\t\tcount ++\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn count\n\t\t\t})\n\t\t}\n\t}, [gameInfo, playerCredentials, playerID, sit])\n\n\tfunction stand(updateAfter=true) {\n\t\tconst opts = {\n\t\t\t\tplayerID: playerID,\n\t\t\t\tcredentials: playerCredentials\n\t\t\t} \n\t\tfetch(data.serverPathFull + \"/\" + gameInfo.roomID + \"/leave\", {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\tbody: JSON.stringify(opts)\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (updateAfter) updateGameInfo()\n\t\t\t})\n\t\tsetPlayerID(-1)\n\t}\n\n\tfunction onLeaveClick() {\n\t\t// console.log(\"Leaving...\")\n\t\tsetShowConfirmLeave(true)\t\t\n\t}\n\n\tfunction leave() {\n\t\tstand(false)\n\t\tdata.backToEntry()\n\t}\n\n\tfunction dialog(text, showState, setShowState) {\n\t\t// defaults\n\t\tif (text.confirm === undefined) text.confirm = \"Confirm\"\n\t\treturn(\n\t\t\t<Modal show={showState} onHide={() => setShowState(false)}>\n\t\t\t\t{text.header && \n\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t<Modal.Title>{text.header}</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t}\n\t\t\t\t<Modal.Body>{text.body}</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={() => setShowState(false)}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => {\n\t\t\t\t\t\t\tleave()\n\t\t\t\t\t\t\tsetShowState(false)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t{text.confirm}\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n\tif (gameInfo == null) {\n\t\tupdateGameInfo()\n\t\treturn(<div>Connecting... {data.serverPath}</div>)\n\t}\n\telse {\n\t\treturn(\n\t\t\t<div className=\"lobby\">\n\t\t\t\t<div>\n\t\t\t\t\tgameID: {gameInfo.roomID}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tgameInfo.players.map((x, i) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<div key={i}>\n\t\t\t\t\t\t\t\t{x.id} - {x.name}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={sit} disabled={playerID >= 0}>Sit</Button>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={stand} disabled={playerID < 0 || numPlayers === 1}>Stand</Button>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={onLeaveClick}>Leave</Button>\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => startGame(data.serverPath, data.gameID, playerID, playerCredentials)} disabled={numPlayers < gameInfo.players.length}>Start</Button>\n\t\t\t\t</div>\n\n\t\t\t\t{/* Confirm leave dialog */}\n\n\t\t\t\t{dialog({\n\t\t\t\t\t\theader: \"Leaving\",\n\t\t\t\t\t\tbody: \"Are you sure you'd like to leave?\",\n\t\t\t\t\t\tconfirm: \"Leave\"\n\t\t\t\t\t},\n\t\t\t\t\tshowConfirmLeave, setShowConfirmLeave)}\n\n\t\t\t</div>\n\n\t\t)\n\t}\n\n}\n","import React from 'react'\nimport Entry from './Entry'\nimport Join from './Join'\nimport Create from './Create'\nimport Wait from './Wait'\n\nexport default function Lobby({startGame}) {\n\n\tconst [name, setName] = React.useState(\"\");\n\tconst [lobbyState, setLobbyState] = React.useState(\"entry\");\n\tconst [gameID, setGameID] = React.useState(\"\");\n\tconst [numPlayers, setnumPlayers] = React.useState(4);\n\tconst [numCats, setNumCats] = React.useState(5);\n\n\tlet server = \"https://camaew-up.herokuapp.com\"\n\tif (process.env.NODE_ENV === \"development\")\n\t\tserver = \"http://localhost:8000\"\n\tconst [serverPath, setServerPath] = React.useState(server)\n\n\t// for development purpose\n\t// npm run host, and npm run client\n\tReact.useEffect(() => {\n\t\tconsole.log(process.env.REACT_APP_AGENT)\n\t\tif (process.env.REACT_APP_AGENT === \"host\") {\n\t\t\tconst data = {numPlayers: 2, setupData: {test: true, numCats: 5, numTiles: 16}}\n\t\t\tcreateGame(data).then(x => {\n\t\t\t\tconsole.log(x.gameID)\n\t\t\t\tfetch(serverPath + \"/games/CamaewUp/\" + x.gameID + \"/join\", {\n\t\t\t\t\tmethod: \"post\",\n\t\t\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tplayerID: 0,\n\t\t\t\t\t\tplayerName: 'Host'\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t.then(data => {\n\t\t\t\t\t\tstartGame(serverPath, x.gameID, 0, data.playerCredentials)\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t\telse if (process.env.REACT_APP_AGENT === \"client\") {\n\t\t\tfetch(serverPath + \"/games/CamaewUp/\")\n\t\t\t\t.then(response => response.json())\n\t\t\t\t.then(data => {\n\t\t\t\t\tconst gameID = data.rooms.pop().gameID\n\t\t\t\t\tfetch(serverPath + \"/games/CamaewUp/\" + gameID + \"/join\", {\n\t\t\t\t\t\tmethod: \"post\",\n\t\t\t\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\t\tplayerID: 1,\n\t\t\t\t\t\t\tplayerName: 'Client'\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t\t.then(data => {\n\t\t\t\t\t\t\tstartGame(serverPath, gameID, 1, data.playerCredentials)\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t}\n\t}, [])\n\n\tfunction onServerPathChange(event) {\n\t\tsetServerPath(event.target.value);\n\t}\n\n\tfunction onNameChange(event) {\n\t\tsetName(event.target.value);\n\t}\n\n\tfunction onGameIDChange(event) {\n\t\tsetGameID(event.target.value)\n\t}\n\n\tfunction onNumPlayersChange(val) {\n\t\tsetnumPlayers(val)\n\t}\n\n\tfunction onNumCatsChange(val) {\n\t\tsetNumCats(val)\n\t}\n\n\tfunction onJoinClick() {\n\t\tsetLobbyState(\"join\")\n\t}\n\n\tfunction onCreateClick() {\n\t\tsetLobbyState(\"create\")\n\t}\n\n\tfunction onJoinJoinClick() {\n\t\t// console.log(\"Joining a game...\", gameID)\n\t\tjoinGame()\n\t}\n\n\tfunction onCreateCreateClick() {\n\t\t// console.log(\"Creating game...\")\n\t\tconst data = {numPlayers: numPlayers, setupData: {numCats: numCats, numTiles: 16}}\n\t\tcreateGame(data).then(x => {\n\t\t\t// console.log(\"Game created\", x.gameID)\n\t\t\tsetGameID(x.gameID)\n\t\t\tjoinGame()\n\t\t})\n\t}\n\n\t/**\n\t * Creates a game.\n\t *\n\t * @return     A promise to gameID.\n\t */\n\tfunction createGame(data) {\n\t\t// const opts = {numPlayers: numPlayers, setupData: {}}\n\t\t// console.log(\"Creating game...\")\n\t\treturn fetch(serverPath + \"/games/CamaewUp/create\", {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\tbody: JSON.stringify(data)\n\t\t})\n\t\t\t.then(response => response.json())\n\t}\n\n\t/**\n\t * Enters a game with a given gameID.\n\t * Note that this doesn't actually \"join\" the game\n\t * (i.e. pick a seat, get credentials, etc.), but\n\t * just enter into the room and display the information\n\t * (see who's there, which seats are available, etc.)\n\t *\n\t * @param      {string}  gameID  The game ID.\n\t */\n\tfunction joinGame() {\n\t\tsetLobbyState(\"wait\")\n\t}\n\n\tfunction backToEntry() {\n\t\tsetLobbyState(\"entry\")\n\t}\n\n\tconst data = {\n\t\tname: name,\n\t\tgameID: gameID,\n\t\tnumPlayers: numPlayers,\n\t\tnumCats: numCats,\n\t\tserverPath: serverPath,\n\t\tserverPathFull: serverPath + \"/games/CamaewUp\",\n\t\tonServerPathChange: onServerPathChange,\n\t\tonNameChange: onNameChange,\n\t\tonGameIDChange: onGameIDChange,\n\t\tonNumPlayersChange: onNumPlayersChange,\n\t\tonNumCatsChange: onNumCatsChange,\n\t\tbackToEntry: backToEntry,\n\t}\n\n\tif (lobbyState === \"entry\") {\n\t\treturn(<Entry data={data} onJoinClick={onJoinClick} onCreateClick={onCreateClick} />)\n\t}\n\telse if (lobbyState === \"join\") {\n\t\treturn(<Join data={data} onJoinJoinClick={onJoinJoinClick} />)\n\t}\n\telse if (lobbyState === \"create\") {\n\t\treturn(<Create data={data} onCreateCreateClick={onCreateCreateClick} />)\n\t}\n\telse if (lobbyState === \"wait\") {\n\t\t// console.log(\"name\", name)\n\t\treturn(<Wait data={data} startGame={startGame} />)\n\t}\n\n}\n","import React from 'react';\n\nexport default function Cell({cellData, cell_id, isExtra, playerID, gameMetadata, prePlaceMod, preMoveMod, preFlipMod}) {\n\n\tfunction allowDrop(e) {\n\t\te.preventDefault();\n\t}\n\n\tfunction drop(e) {\n\t\te.preventDefault();\n\t\tprePlaceMod(Number(cell_id), e.dataTransfer.getData(\"type\"))\n\t}\n\n\tfunction handleModClick() {\n\t\tpreFlipMod(Number(cell_id))\n\t}\n\n\tfunction drag(e) {\n\t\te.dataTransfer.setData(\"type\", \"move\")\n\t}\n\n\tconst catEmoji = ['(ꏿ ᆺ ꏿ)', '(=^ ◡ ^=)', '(=✪ᆽ✪=)', '(=චᆽච=)', '(≗ᆽ≗)', '( ̿–ᆺ ̿–)']\n\n\treturn (\n\t\t<div className={\"cell \" + (isExtra && 'cell-extra')} onDragOver={allowDrop} onDrop={drop}>\n\t\t\t<div className=\"cell-content\">\n\t\t\t{\n\t\t\t\tcellData.stack.slice(0).reverse().map((x, i) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<div className={`token tokencolor-${x}`} key={\"cat_stack\" + i}>\n\t\t\t\t\t\t\t{catEmoji[x]}<br />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t\t</div>\n\t\t\t{cellData.mod &&\n\t\t\t\t<div className={`cell-mod card ${cellData.mod.type}`}\n\t\t\t\t\t\tonClick={handleModClick}\n\t\t\t\t\t\tdraggable={playerID === cellData.mod.playerID}\n\t\t\t\t\t\tonDragStart={drag}>\n\t\t\t\t\t{gameMetadata[cellData.mod.playerID].name || '–'}\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n\n}","import React from 'react'\nimport Cell from './Cell'\nimport {Button, Modal} from 'react-bootstrap'\n\nexport default function RaceTrack({G, playerID, gameMetadata, placeMod, moveMod, removeMod, flipMod}) {\n\n\tconst [showPlaceDialog, setShowPlaceDialog] = React.useState(false)\n\tconst [showFlipDialog, setShowFlipDialog] = React.useState(false)\n\tconst [cellID, setCellID] = React.useState(null)\n\tconst [type, setType] = React.useState(null)\n\t\n\tfunction prePlaceMod(cellID, type) {\n\t\tif (type === \"place\" && G.players[playerID].modPos > -1) {\n\t\t\tconsole.error(\"Player has already placed his/her mod.\")\n\t\t\treturn\n\t\t}\n\t\tif (G.board[cellID].stack.length > 0) {\n\t\t\tconsole.error(\"Cannot place mod where cats are.\")\n\t\t\treturn\n\t\t}\n\t\tif ((cellID > 0 && G.board[cellID-1].mod !== null && G.board[cellID-1].mod.playerID !== playerID)\n\t\t\t\t|| (cellID < G.board.length - 1 && G.board[cellID+1].mod !== null && G.board[cellID+1].mod !== playerID)) {\n\t\t\tconsole.error(\"Cannot place mod adjacent to an existing mod.\")\n\t\t\treturn\n\t\t}\n\t\tif (G.board[cellID].mod !== null) {\n\t\t\tif (G.board[cellID].mod.playerID === playerID)\n\t\t\t\treturn\n\t\t\tconsole.error(\"Cannot place mod on top of an existing mod.\")\n\t\t\treturn\n\t\t}\n\t\tsetCellID(cellID)\n\t\tsetType(type)\n\t\tsetShowPlaceDialog(true)\n\t}\n\n\tfunction preFlipMod(cellID) {\n\t\tsetCellID(cellID)\n\t\tsetShowFlipDialog(true)\n\t}\n\n\tfunction PlaceDialog() {\n\t\treturn (\n\t\t\t<Modal show={showPlaceDialog} onHide={() => setShowPlaceDialog(false)}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Placing Mod</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>Which kind of mod would you like to place?</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={() => setShowPlaceDialog(false)}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"danger\" onClick={() => {\n\t\t\t\t\t\t\t// console.log(\"Place tape mod\")\n\t\t\t\t\t\t\tif (type === \"place\")\n\t\t\t\t\t\t\t\tplaceMod(playerID, cellID, \"tape\")\n\t\t\t\t\t\t\telse if (type === \"move\")\n\t\t\t\t\t\t\t\tmoveMod(playerID, cellID, \"tape\")\n\t\t\t\t\t\t\tsetShowPlaceDialog(false)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tTape\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"success\" onClick={() => {\n\t\t\t\t\t\t\t// console.log(\"Place cucumber mod\")\n\t\t\t\t\t\t\tif (type === \"place\")\n\t\t\t\t\t\t\t\tplaceMod(playerID, cellID, \"cucumber\")\n\t\t\t\t\t\t\telse if (type === \"move\")\n\t\t\t\t\t\t\t\tmoveMod(playerID, cellID, \"cucumber\")\n\t\t\t\t\t\t\tsetShowPlaceDialog(false)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tCucumber\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n\tfunction FlipDialog() {\n\t\treturn (\n\t\t\t<Modal show={showFlipDialog} onHide={() => setShowFlipDialog(false)}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Flipping Mod</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>Would you like to flip the mod?</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={() => setShowFlipDialog(false)}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"outline-primary\" onClick={() => {\n\t\t\t\t\t\t\t// console.log(\"Remove mod\")\n\t\t\t\t\t\t\tremoveMod(playerID)\n\t\t\t\t\t\t\tsetShowFlipDialog(false)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tRemove\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => {\n\t\t\t\t\t\t\t// console.log(\"Flip mod\")\n\t\t\t\t\t\t\tflipMod(playerID)\n\t\t\t\t\t\t\tsetShowFlipDialog(false)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tFlip\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n\treturn(\n\t\t<React.Fragment>\n\n\t\t\t<div className=\"board\">\n\t\t\t\t{\n\t\t\t\t\tG.board.map((cell, i) => <Cell\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcellData={cell}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell_id={i}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisExtra={i >= G.numTiles}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplayerID={playerID}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgameMetadata={gameMetadata}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprePlaceMod={prePlaceMod}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreFlipMod={preFlipMod}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<PlaceDialog />\n\t\t\t<FlipDialog />\n\n\t\t</React.Fragment>\n\t)\n\n}\n","import React from 'react'\nimport {ListGroup} from 'react-bootstrap'\n\nexport default function Players({currentPlayer, players, gameMetadata}) {\n\treturn(\n\t\t<div className=\"players\">\n\t\t\t<ListGroup>\n\t\t\t{\n\t\t\t\tgameMetadata.map((x, i) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<ListGroup.Item active={x.id === Number(currentPlayer)} className=\"flex\" key={\"player\" + i}>\n\t\t\t\t\t\t\t{`${x.name} (${players[i].coins})`}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tplayers[i].smallBets.map((color, j) => {\n\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t<React.Fragment key={\"smallBets\" + j}>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcolor.map(card => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <div className={`tokencolor-${j} card`} key={\"smallBet\" + i}>{card}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t\t</ListGroup>\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport {ListGroup} from 'react-bootstrap'\nimport {random} from 'lodash'\n\nimport { useEffectListener } from 'bgio-effects/react';\n\nexport default function RolledDice({dice}) {\n\n\tconst [diceUI, setDiceUI] = React.useState(dice)\n\n\tfunction replaceElement(array, index, value) {\n\t\tlet tmp = array.slice()\n\t\ttmp[index] = value\n\t\treturn tmp\n\t}\n\n\tlet diceInterval = null\n\n\tuseEffectListener('roll', ({catID, preDice}) => {\n\t\tdiceInterval = setInterval(() => {\n\t\t\tsetDiceUI(replaceElement(preDice, catID, random(1, 3)))\n\t\t}, 100)\n\t}, []);\n\n\tuseEffectListener('rollDone', (finalDice) => {\n\t\tclearInterval(diceInterval)\n\t\tsetDiceUI(finalDice)\n\t}, []);\n\n\treturn(\n\t\t<div>\n\t\t\t<div className=\"section\">Rolled dice</div>\n\t\t\t<ListGroup horizontal>\n\t\t\t{\n\t\t\t\tdiceUI.map((x, i) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<ListGroup.Item className={`tokencolor-${i}`} key={i}>\n\t\t\t\t\t\t\t{x}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t\t</ListGroup>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport {ListGroup} from 'react-bootstrap'\n\nexport default function SmallStack({stack, makeSmallBet}) {\n\n\tfunction handleClick(bet) {\n\t\tif (stack[bet].length > 0)\n\t\t\tmakeSmallBet(bet)\n\t}\n\n\treturn(\n\t\t<div>\n\t\t\t<div className=\"section\">SmallStack</div>\n\t\t\t<ListGroup horizontal>\n\t\t\t{\n\t\t\t\tstack.map((x, i) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<ListGroup.Item className={`tokencolor-${i}`} onClick={() => handleClick(i)} key={i}>\n\t\t\t\t\t\t\t{x[x.length - 1]}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t\t</ListGroup>\n\t\t</div>\n\t)\n\n}\n","import React from 'react'\n\n\n\nexport default function BetCards({cards}) {\n\n\tfunction drag(e) {\n\t\te.dataTransfer.setData(\"betID\", e.target.getAttribute(\"bet_id\"))\n\t}\n\n\treturn(\n\t\t<div>\n\t\t\t<div className=\"section\">Bet Cards</div>\n\t\t\t\t<div className=\"flex\">\n\t\t\t\t{\n\t\t\t\t\tcards.map((x, i) => {\n\t\t\t\t\t\tif (x) {\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={`tokencolor-${i} card`}\n\t\t\t\t\t\t\t\t\t\tbet_id={i}\n\t\t\t\t\t\t\t\t\t\tdraggable=\"true\"\n\t\t\t\t\t\t\t\t\t\tonDragStart={drag}\n\t\t\t\t\t\t\t\t\t\tkey={\"betCards\" + i}>\n\t\t\t\t\t\t\t\t\tX\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\n\nexport default function BetZone({stack, playerID, makeBigBet, side}) {\n\n\tfunction allowDrop(e) {\n\t  e.preventDefault();\n\t}\n\n\tfunction drop(e) {\n\t\te.preventDefault();\n\t\tmakeBigBet(playerID, Number(e.dataTransfer.getData(\"betID\")), side)\n\t}\n\n\treturn(\n\t\t<div className=\"betzone\" onDragOver={allowDrop} onDrop={drop}>\n\t\t\t{`${side}: ${stack[side].length}`}\n\t\t</div>\n\t)\n\n}","import React from 'react'\n\nexport default function Mod({hasMod, playerID}) {\n\n\tfunction drag(e) {\n\t\te.dataTransfer.setData(\"playerID\", e.target.getAttribute(\"player_id\"))\n\t\te.dataTransfer.setData(\"type\", \"place\")\n\t}\n\n\treturn(\n\t\t<div>\n\t\t\t<div className=\"section\">Mod Tile</div>\n\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"card\"\n\t\t\t\t\t\t\tdraggable={hasMod}\n\t\t\t\t\t\t\tplayer_id={playerID}\n\t\t\t\t\t\t\tonDragStart={drag}>\n\t\t\t\t\t\t{hasMod ? \"X\" : \"–\"}\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\n\nexport default function LogArea({logArray, gameMetadata}) {\n\n\tconst logArea = React.useRef(null)\n\n\tReact.useEffect(() => {\n\t\tlogArea.current.scrollTop = logArea.current.scrollHeight\n\t}, [logArray])\n\n\treturn(\n\t\t<div className=\"log-area\" ref={logArea}>\n\t\t\t{\n\t\t\t\tlogArray.map((x, i) => {\n\t\t\t\t\tswitch (x.move) {\n\t\t\t\t\t\tcase \"text\":\n\t\t\t\t\t\t\treturn <div key={\"log\" + i}>{x.text}</div>\n\t\t\t\t\t\tcase \"roll\":\n\t\t\t\t\t\t\treturn <div className=\"flex\" key={\"log\" + i}>{`${gameMetadata[x.playerID].name} rolled a `}<span className={`tokencolor-${x.catID} card`}>{x.roll}</span></div>\n\t\t\t\t\t\tcase \"mod\":\n\t\t\t\t\t\t\treturn <div className=\"flex\" key={\"log\" + i}>{`... found a ${x.mod}`}</div>\n\t\t\t\t\t\tcase \"smallBet\": \n\t\t\t\t\t\t\treturn <div className=\"flex\" key={\"log\" + i}>{`${gameMetadata[x.playerID].name} took a small bet `}<span className={`tokencolor-${x.catID} card`}>{x.card}</span></div>\n\t\t\t\t\t\tcase \"bigBet\":\n\t\t\t\t\t\t\treturn <div className=\"flex\" key={\"log\" + i}>{`${gameMetadata[x.playerID].name} made a ${x.side} bet`}</div>\n\t\t\t\t\t\tcase \"placeMod\":\n\t\t\t\t\t\t\treturn <div className=\"flex\" key={\"log\" + i}>{`${gameMetadata[x.playerID].name} placed a ${x.type} mod at ${x.cellID}`}</div>\n\t\t\t\t\t\tcase \"removeMod\":\n\t\t\t\t\t\t\treturn <div className=\"flex\" key={\"log\" + i}>{`${gameMetadata[x.playerID].name} removed the mod at ${x.cellID}`}</div>\n\t\t\t\t\t\tcase \"flipMod\":\n\t\t\t\t\t\t\treturn <div className=\"flex\" key={\"log\" + i}>{`${gameMetadata[x.playerID].name} flipped the mod at ${x.cellID}`}</div>\n\t\t\t\t\t\tcase \"moveMod\":\n\t\t\t\t\t\t\treturn <div className=\"flex\" key={\"log\" + i}>{`${gameMetadata[x.playerID].name} moved the mod to a ${x.type} mod at ${x.cellID}`}</div>\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn <div key={\"log\" + i} />\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport RaceTrack from './RaceTrack'\nimport Players from './Players'\nimport RolledDice from './RolledDice'\nimport SmallStack from './SmallStack'\nimport BetCards from './BetCards'\nimport BetZone from './BetZone'\nimport Mod from './Mod'\nimport LogArea from './LogArea'\nimport {Button} from 'react-bootstrap'\n\nexport default function GameScreen({G, ctx, moves, playerID, gameMetadata, gameID, ...rest}) {\n\n\t// convert string back to number for easier processing\n\tplayerID = Number(playerID)\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"flex\">\n\t\t\t\t<div className=\"control\">\n\t\t\t\t\t<div className=\"section\">Camaew Up!</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Players currentPlayer={ctx.currentPlayer} players={G.players} gameMetadata={gameMetadata} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={() => moves.roll(playerID)}>Roll</Button>\n\t\t\t\t\t\t<RolledDice dice={G.dice} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"control\">\n\t\t\t\t\t<Mod hasMod={G.players[playerID].modPos === -1} playerID={playerID} />\n\t\t\t\t\t<SmallStack stack={G.smallStack} makeSmallBet={bet => moves.makeSmallBet(playerID, bet)} />\n\t\t\t\t\t<BetCards cards={G.players[playerID].betCards} />\n\t\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t\t<BetZone stack={G.bigStack} playerID={playerID} makeBigBet={moves.makeBigBet} side=\"lose\" />\n\t\t\t\t\t\t<BetZone stack={G.bigStack} playerID={playerID} makeBigBet={moves.makeBigBet} side=\"win\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"control\">\n\t\t\t\t\t<LogArea logArray={G.logArray} gameMetadata={gameMetadata} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id=\"racetrack-wrapper\">\n\t\t\t\t<RaceTrack\n\t\t\t\t\t\tG={G}\n\t\t\t\t\t\tplayerID={playerID}\n\t\t\t\t\t\tgameMetadata={gameMetadata}\n\t\t\t\t\t\tplaceMod={moves.placeMod}\n\t\t\t\t\t\tmoveMod={moves.moveMod}\n\t\t\t\t\t\tremoveMod={moves.removeMod}\n\t\t\t\t\t\tflipMod={moves.flipMod} />\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n\n}\n","import React, {useState, useEffect} from 'react'\nimport {Client} from 'boardgame.io/react'\nimport {SocketIO} from 'boardgame.io/multiplayer'\nimport CamaewUp from './CamaewUp'\nimport Lobby from './lobby/Lobby'\nimport GameScreen from './game/GameScreen'\nimport { createBrowserHistory } from 'history'\nimport ReactGA from 'react-ga'\nimport { EffectsBoardWrapper } from 'bgio-effects/react';\n\nimport './style.css'\n\nlet CamaewUpClient = null\n\nconst history = createBrowserHistory()\n\nReactGA.initialize('UA-2995735-5')\nReactGA.pageview(window.location.pathname + window.location.search)\n\nfunction App() {\n\n\tconst [state, setState] = useState(\"lobby\");\n\tconst [data, setData] = useState({})\n\n\tfunction startGame(serverPath, gameID, playerID, credentials) {\n\t\tsetData({gameID: gameID, playerID: playerID, credentials: credentials})\n\t\tconst board = EffectsBoardWrapper(GameScreen, {\n\t\t  // Delay passing the updated boardgame.io state to your board\n\t\t  // until after the last effect has been triggered.\n\t\t  // Default: false\n\t\t  updateStateAfterEffects: true});\n\t\tCamaewUpClient = Client({game: CamaewUp,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tboard: board,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmultiplayer: SocketIO({server: serverPath}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdebug: true\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\tsetState(\"game\")\n\t}\n\n\tuseEffect(() => {\n\t\tif (state.name === \"game\") {\n\t\t\thistory.push('?' + state.gameID)\n\t\t}\n\t}, [state.name, state.gameID])\n\n\tif (state === \"lobby\") {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Lobby startGame={startGame}/>\n\t\t\t</div>\n\t\t)\n\t}\n\telse if (state === \"game\") {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<CamaewUpClient gameID={data.gameID} playerID={String(data.playerID)} credentials={data.credentials} />\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}