{"version":3,"sources":["CamaewUp.js","lobby/Entry.js","lobby/Join.js","lobby/Create.js","lobby/Wait.js","lobby/Lobby.js","game/Cell.js","game/RaceTrack.js","game/Players.js","game/RolledDice.js","game/SmallStack.js","game/BetCards.js","game/BetZone.js","game/Mod.js","game/GameScreen.js","App.js","index.js"],"names":["genArray","size","data","a","Array","i","cloneDeep","rankCats","G","indices","from","numCats","x","sort","b","pos","stack","board","indexOf","resetSmallRound","ctx","dice","fill","numPlayers","players","smallBets","removeMod","smallStack","scoreSmallRound","console","log","rank","smallBetWins","sum","length","j","coins","rollDice","playerID","numDiceLeft","filter","dieRolled","random","Die","roll","lastDiceRolled","error","catID","curCellNum","curStack","curCell","curLayer","slice","concat","cleanUp","moveCat","placeMod","cellID","type","mod","modPos","CamaewUp","name","setup","setupData","numTiles","betCards","bigStack","moves","resolveBoard","winnings","win","curBet","bet","pop","losings","lose","scoreRace","makeSmallBet","push","makeBigBet","side","flipMod","newType","moveMod","newCellID","turn","moveLimit","onEnd","onMove","minPlayers","maxPlayers","Entry","onJoinClick","onCreateClick","id","className","Button","variant","onClick","Join","onJoinJoinClick","Form","Label","Control","value","onChange","onNameChange","gameID","onGameIDChange","disabled","backToEntry","Create","onCreateCreateClick","ToggleButtonGroup","onNumPlayersChange","ToggleButton","onNumCatsChange","Check","label","Wait","text","showState","setShowState","serverPath","startGame","React","useState","gameInfo","setGameInfo","setNumPlayers","setPlayerID","playerCredentials","setPlayerCredentials","showConfirmLeave","setShowConfirmLeave","updateGameInfo","useCallback","fetch","method","then","response","json","findSeat","sit","seatID","opts","playerName","roomID","headers","body","JSON","stringify","stand","updateAfter","credentials","useEffect","interval","setInterval","clearInterval","count","map","key","undefined","header","confirm","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Lobby","setName","lobbyState","setLobbyState","setGameID","setnumPlayers","setNumCats","joinGame","event","target","val","Cell","cellData","cell_id","gameMetadata","prePlaceMod","preFlipMod","preMoveMod","onDragOver","e","preventDefault","onDrop","Number","dataTransfer","getData","reverse","draggable","onDragStart","setData","RaceTrack","showPlaceDialog","setShowPlaceDialog","showFlipDialog","setShowFlipDialog","setCellID","setType","PlaceDialog","FlipDialog","Fragment","cell","Players","currentPlayer","ListGroup","Item","active","color","card","RolledDice","horizontal","SmallStack","BetCards","cards","drag","getAttribute","bet_id","BetZone","Mod","hasMod","player_id","GameScreen","socket","CamaewUpClient","Client","game","multiplayer","SocketIO","server","debug","history","createBrowserHistory","App","state","setState","String","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7c3f728.chunk.js","sourcesContent":["import {sum, cloneDeep} from 'lodash'\n\nfunction genArray(size, data) {\n\tlet a = new Array(size );\n\tfor (let i = 0; i < size; i ++) {\n\t\ta[i] = cloneDeep(data);\n\t}\n\treturn a\n}\n\nfunction rankCats(G) {\n\tlet indices = Array.from(new Array(G.numCats), (x, i) => i)\n\tindices.sort((a, b) => {\n\t\tif (G.pos[a] !== G.pos[b])\n\t\t\treturn G.pos[b] - G.pos[a]\n\t\telse {\n\t\t\t// break tie with stack order\n\t\t\tconst stack = G.board[G.pos[a]].stack\n\t\t\treturn stack.indexOf(b) - stack.indexOf(a)\n\t\t}\n\t});\n\treturn indices\n\t// let ret = Array(G.numCats)\n\t// for (let i = 0; i < G.numCats; i ++) {\n\t// \tret[indices[i]] = i\n\t// }\n\t// return ret;\n}\n\nfunction resetSmallRound(G, ctx) {\n\t// reset dice\n\tG.dice = Array(G.numCats).fill(0)\n\n\tfor (let i = 0; i < ctx.numPlayers; i ++) {\n\t\tG.players[i].smallBets = Array(G.numCats).fill([])\n\t\tremoveMod(G, i)\n\t}\n\n\tG.smallStack = Array(G.numCats).fill([2, 3, 5])\n\n}\n\nfunction scoreSmallRound(G, ctx) {\n\tconsole.log(\"End of small round.\")\n\n\t// reset dice\n\tG.dice = Array(G.numCats).fill(0)\n\n\t// get ranks\n\tconst rank = rankCats(G)\n\t\n\tfor (let i = 0; i < ctx.numPlayers; i ++) {\n\t\t\n\t\t// small bets\n\t\tlet smallBetWins = 0\n\t\tsmallBetWins += sum(G.players[i].smallBets[rank[0]])\n\t\tsmallBetWins += G.players[i].smallBets[rank[1]].length\n\t\tfor (let j = 2; j < G.numCats; j ++) {\n\t\t\tsmallBetWins -= G.players[i].smallBets[rank[j]].length\t\n\t\t}\n\t\tconsole.log(\"Small bet wins for\", i, smallBetWins)\n\t\tG.players[i].coins += smallBetWins\n\t\t// G.players[i].smallBets = Array(G.numCats).fill([])\n\t\n\t\t// remove mods\n\t\t// removeMod(G, i)\n\n\t}\n\n\t// G.smallStack = Array(G.numCats).fill([2, 3, 5])\n\n}\n\nfunction scoreRace(G, ctx) {\n\tconsole.log(\"End of race.\")\n\tconst rank = rankCats(G)\n\n\t// winning pile\n\tlet winnings = [1, 2, 3, 5, 8]\n\tfor (let i = 0; i < G.bigStack.win.length; i ++) {\n\t\tconst curBet = G.bigStack.win[i]\n\t\tif (curBet.bet === rank[0]) {\n\t\t\t// winning bet\n\t\t\tG.players[curBet.playerID].coins += winnings.pop()\n\t\t}\n\t\telse {\n\t\t\tG.players[curBet.playerID].coins -= 1\n\t\t}\n\t\tif (winnings.length === 0)\n\t\t\twinnings = [1]\n\t}\n\n\t// losing pile\n\tlet losings = [1, 2, 3, 5, 8]\n\tfor (let i = 0; i < G.bigStack.lose.length; i ++) {\n\t\tconst curBet = G.bigStack.lose[i]\n\t\tif (curBet.bet === rank[G.numCats - 1]) {\n\t\t\t// winning bet\n\t\t\tG.players[curBet.playerID].coins += losings.pop()\n\t\t}\n\t\telse {\n\t\t\tG.players[curBet.playerID].coins -= 1\n\t\t}\n\t\tif (losings.length === 0)\n\t\t\tlosings = [1]\n\t}\n\n}\n\nfunction moveCat(G, ctx, catID, roll) {\n\n\tconst curCellNum = G.pos[catID]\n\tlet curStack = []\n\n\tif (curCellNum >= 0) {\n\t\tconst curCell = G.board[curCellNum].stack\n\t\tconst curLayer = curCell.indexOf(catID)\n\t\tcurStack = curCell.slice(curLayer)\n\t\t// update old cell\n\t\tconsole.log(\"curStack\", curStack)\n\t\tG.board[curCellNum].stack = G.board[curCellNum].stack.slice(0, curLayer)\n\t}\n\telse {\n\t\tcurStack = [catID]\n\t}\n\t// update new cell\n\tG.board[curCellNum + roll].stack = G.board[curCellNum + roll].stack.concat(curStack)\n\n\tfor (let i = 0; i < curStack.length; i ++) {\n\t\tG.pos[curStack[i]] += roll\t\n\t}\n\n\tG.cleanUp = curCellNum + roll\n\n\t// await new Promise(r => setTimeout(r, 1000));\n\t// // setTimeout(() => resolveBoard(G, ctx, curCellNum + roll), 1000)\n\t// resolveBoard(G, ctx, curCellNum + roll)\n\n}\n\nfunction resolveBoard(G, ctx) {\n\n\tconst mod = G.board[G.cleanUp].mod\n\n\tif (mod === null) {\n\t\treturn\n\t}\n\telse {\n\t\tG.players[mod.playerID].coins += 1\n\t\tconst curStack = G.board[G.cleanUp].stack\n\t\tG.board[G.cleanUp].stack = []\n\t\tif (mod.type === \"tape\") {\n\t\t\tG.board[G.cleanUp - 1].stack = curStack.concat(G.board[G.cleanUp - 1].stack)\n\t\t\tfor (let i = 0; i < curStack.length; i ++) {\n\t\t\t\tG.pos[curStack[i]] = G.cleanUp - 1\n\t\t\t}\n\t\t\tconsole.log(\"Got taped\")\n\t\t}\n\t\telse if (mod.type === \"cucumber\") {\n\t\t\tG.board[G.cleanUp + 1].stack = G.board[G.cleanUp + 1].stack.concat(curStack)\n\t\t\tfor (let i = 0; i < curStack.length; i ++) {\n\t\t\t\tG.pos[curStack[i]] = G.cleanUp + 1\n\t\t\t}\n\t\t\tconsole.log(\"Got cucumbered\")\n\t\t}\n\t}\n\n}\n\nfunction rollDice(G, ctx, playerID) {\n\n\t// random dice first\n\tconst numDiceLeft = G.dice.filter(x => x === 0).length\n\tconst dieRolled = ctx.random.Die(numDiceLeft) - 1\n\tconst roll = ctx.random.Die(3)\n\tlet i = 0\n\tlet j = 0\n\tfor (j = 0; j < G.numCats; j ++) {\n\t\tif (G.dice[j] === 0) {\n\t\t\tif (i === dieRolled) {\n\t\t\t\tG.dice[j] = roll;\n\t\t\t\tG.lastDiceRolled = j;\n\t\t\t\tbreak\n\t\t\t}\n\t\t\ti ++\n\t\t}\n\t}\n\tif (j === G.numCats) {\n\t\tconsole.error(\"Something's wrong. The dice probably didn't get reset.\")\n\t}\n\tconsole.log(\"Roll dice\", j, \"->\", roll)\n\n\t// move cat `j`` by `roll` accordingly\n\tmoveCat(G, ctx, j, roll)\n\tif (playerID != null)\n\t\tG.players[playerID].coins += 1\n\n}\n\nfunction makeSmallBet(G, playerID, bet) {\n\tG.players[playerID].smallBets[bet].push(G.smallStack[bet].pop())\n}\n\nfunction makeBigBet(G, playerID, bet, side) {\n\tG.bigStack[side].push({playerID: playerID, bet: bet})\n\tG.players[playerID].betCards[bet] = false\n}\n\nfunction placeMod(G, playerID, cellID, type) {\n\tG.board[cellID].mod = {playerID: playerID, type: type}\n\tG.players[playerID].modPos = cellID\n}\n\nfunction removeMod(G, playerID) {\n\tif (G.players[playerID].modPos > -1) {\n\t\tG.board[G.players[playerID].modPos].mod = null\n\t\tG.players[playerID].modPos = -1\t\n\t}\n}\n\nconst CamaewUp = {\n\tname: \"CamaewUp\",\n\tsetup: (ctx, setupData) => {\n\t\tlet G = {\n\t\t\tnumCats: setupData.numCats,\n\t\t\tnumTiles: setupData.numTiles,\n\t\t\tdice: Array(setupData.numCats).fill(0),\n\t\t\tlastDiceRolled: -1,\n\t\t\tcleanUp: -1,\n\t\t\tpos: Array(setupData.numCats).fill(-1),\n\t\t\tboard: genArray(setupData.numTiles + 3, {stack: [], mod: null}),\n\t\t\tplayers: genArray(ctx.numPlayers, {coins: 0,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsmallBets: Array(setupData.numCats).fill([]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbetCards: Array(setupData.numCats).fill(true),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodPos: -1}),\n\t\t\tsmallStack: Array(setupData.numCats).fill([2, 3, 5]),\n\t\t\tbigStack: {\"win\": [], \"lose\": []}\n\t\t}\n\t\tfor (let i = 0; i < G.numCats; i ++)\n\t\t\trollDice(G, ctx)\n\t\tresetSmallRound(G, ctx)\n\t\treturn G\n\t},\n\tmoves: {\n\t\troll: (G, ctx, playerID) => {\n\t\t\trollDice(G, ctx, playerID)\n\t\t\tresolveBoard(G, ctx)\n\t\t\tif (G.cleanUp >= G.numTiles) {\n\t\t\t\t// end game\n\t\t\t\tscoreSmallRound(G, ctx)\n\t\t\t\tscoreRace(G, ctx)\n\t\t\t}\n\t\t\tif (G.dice.filter(x => x === 0).length === 0) {\n\t\t\t\tscoreSmallRound(G, ctx)\n\t\t\t\tresetSmallRound(G, ctx)\n\t\t\t}\n\t\t},\n\t\tmakeSmallBet: (G, ctx, playerID, bet) => {\n\t\t\tmakeSmallBet(G, playerID, bet)\n\t\t},\n\t\tmakeBigBet: (G, ctx, playerID, bet, side) => {\n\t\t\tmakeBigBet(G, playerID, bet, side)\n\t\t},\n\t\tplaceMod: (G, ctx, playerID, cellID, type) => {\n\t\t\tplaceMod(G, playerID, cellID, type)\n\t\t},\n\t\tremoveMod: (G, ctx, playerID) => {\n\t\t\tremoveMod(G, playerID)\n\t\t},\n\t\tflipMod: (G, ctx, playerID) => {\n\t\t\tconst newType = G.board[G.players[playerID].modPos].mod.type === \"tape\" ? \"cucumber\" : \"tape\"\n\t\t\tconst cellID = G.players[playerID].modPos\n\t\t\tremoveMod(G, playerID)\n\t\t\tplaceMod(G, playerID, cellID, newType)\n\t\t},\n\t\tmoveMod: (G, ctx, playerID, newCellID, type) => {\n\t\t\tremoveMod(G, playerID)\n\t\t\tplaceMod(G, playerID, newCellID, type)\n\t\t}\n\t},\n\tturn: {\n\t\tmoveLimit: 1,\n\t\tonEnd: (G, ctx) => {\n\t\t},\n\t\tonMove: (G, ctx) => {\n\t\t}\n\t},\n\tminPlayers: 2,\n\tmaxPlayers: 8\n}\n\nexport default CamaewUp;","import React from 'react'\nimport {Button} from 'react-bootstrap'\n\nfunction Entry({data, onJoinClick, onCreateClick}) {\n\n\treturn(\n\t\t<div id=\"entry-container\" className=\"lobby\">\n\t\t\t<div>\n\t\t\t\t<Button variant=\"primary\" onClick={onJoinClick} size=\"lg\">Join Game</Button>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button variant=\"primary\" onClick={onCreateClick} size=\"lg\">Create Game</Button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Entry;","import React from 'react'\nimport {Button, Form} from 'react-bootstrap'\n\n// function Join({onJoinJoinClick, onGameIDChange, gameID}) {\nfunction Join({data, onJoinJoinClick}) {\n\n\treturn(\n\t\t<div className=\"lobby\">\n\t\t\t<div>\n\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t<Form.Control type=\"text\" value={data.name} onChange={data.onNameChange} />\n\t\t\t</div>\n\t\t\t<div id=\"join-gameid\">\n\t\t\t\t<Form.Label>Game ID</Form.Label>\n\t\t\t\t<Form.Control type=\"text\" value={data.gameID} onChange={data.onGameIDChange} />\n\t\t\t</div>\n\t\t\t<div id=\"lobby-join\" className=\"center\">\n\t\t\t\t<Form.Label>Join Game</Form.Label>\n\t\t\t\t<Button variant=\"primary\" onClick={onJoinJoinClick} disabled={!data.gameID || !data.name}>Join</Button>\n\t\t\t\t<Button variant=\"secondary\" onClick={data.backToEntry}>Back</Button>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n}\n\nexport default Join;","import React from 'react'\nimport {Button, Form, ToggleButtonGroup, ToggleButton} from 'react-bootstrap'\n\nfunction Create({data, onCreateCreateClick}) {\n\n\t// const [numPlayers, setnumPlayers] = React.useState(4);\n\t// const [numCats, setNumCats] = React.useState(5);\n\n\t// function onNumPlayersChange(val) {\n\t// \tsetnumPlayers(val)\n\t// }\n\n\t// function onNumCatsChange(val) {\n\t// \tsetNumCats(val)\n\t// }\n\n\treturn(\n\t\t<div className=\"lobby\">\n\t\t\t<div>\n\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t<Form.Control type=\"text\" value={data.name} onChange={data.onNameChange} />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Form.Label>Number of players</Form.Label>\n\t\t\t\t<ToggleButtonGroup type=\"radio\" name=\"numPlayers\" value={data.numPlayers} onChange={data.onNumPlayersChange}>\n\t\t\t\t\t<ToggleButton value={2}>2</ToggleButton>\n\t\t\t\t\t<ToggleButton value={3}>3</ToggleButton>\n\t\t\t\t\t<ToggleButton value={4}>4</ToggleButton>\n\t\t\t\t\t<ToggleButton value={5}>5</ToggleButton>\n\t\t\t\t\t<ToggleButton value={6}>6</ToggleButton>\n\t\t\t\t\t<ToggleButton value={7}>7</ToggleButton>\n\t\t\t\t\t<ToggleButton value={8}>8</ToggleButton>\n\t\t\t\t</ToggleButtonGroup>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Form.Label>Number of cats</Form.Label>\n\t\t\t\t<ToggleButtonGroup type=\"radio\" name=\"numCats\" value={data.numCats} onChange={data.onNumCatsChange}>\n\t\t\t\t\t<ToggleButton value={3}>3</ToggleButton>\n\t\t\t\t\t<ToggleButton value={4}>4</ToggleButton>\n\t\t\t\t\t<ToggleButton value={5}>5</ToggleButton>\n\t\t\t\t\t<ToggleButton value={6}>6</ToggleButton>\n\t\t\t\t</ToggleButtonGroup>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Form.Check type=\"checkbox\" label=\"Veil mode\" />\n\t\t\t\t<Form.Check type=\"checkbox\" label=\"Random seat\" />\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button variant=\"primary\" onClick={onCreateCreateClick} disabled={!data.name}>Create</Button>\n\t\t\t\t<Button variant=\"secondary\" onClick={data.backToEntry}>Back</Button>\n\t\t\t</div>\n\t\t</div>\n\t)\n\n}\n\nexport default Create;","import React from 'react'\nimport {Button, Modal} from 'react-bootstrap'\n\nfunction Wait({data, serverPath, startGame}) {\n\n\tconst [gameInfo, setGameInfo] = React.useState(null)\n\tconst [numPlayers, setNumPlayers] = React.useState(0)\n\tconst [playerID, setPlayerID] = React.useState(-1)\n\tconst [playerCredentials, setPlayerCredentials] = React.useState(\"\")\n\tconst [showConfirmLeave, setShowConfirmLeave] = React.useState(false)\n\n\t// no idea why we need to use useCallback() :P\n\t\n\tconst updateGameInfo = React.useCallback(() => {\n\t\tconsole.log(\"Getting game info...\", data.gameID)\n\t\tfetch(serverPath + \"/\" + data.gameID, {\n\t\t\tmethod: \"get\"\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => setGameInfo(data))\n\t}, [data.gameID, serverPath])\n\n\tconst findSeat = React.useCallback(() => {\n\t\tupdateGameInfo()\n\t\tfor (let id=0; id < gameInfo.players.length; id ++) {\n\t\t\tif (gameInfo.players[id].name == null) {\n\t\t\t\treturn id\n\t\t\t}\n\t\t}\n\t}, [gameInfo, updateGameInfo])\n\n\tconst sit = React.useCallback(() => {\n\t\tconsole.log(\"Sitting...\", gameInfo)\n\t\tconst seatID = findSeat()\n\t\tconsole.log(\"Found empty seat\", seatID)\n\t\tconst opts = {\n\t\t\tplayerID: seatID,\n\t\t\tplayerName: data.name\n\t\t}\n\t\tfetch(serverPath + \"/\" + gameInfo.roomID + \"/join\", {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\tbody: JSON.stringify(opts)\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tsetPlayerCredentials(data.playerCredentials)\n\t\t\t\tsetPlayerID(seatID)\n\t\t\t\tupdateGameInfo()\n\t\t\t})\n\t}, [data.name, findSeat, gameInfo, serverPath, updateGameInfo])\n\n\tReact.useEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tupdateGameInfo();\n\t\t}, 2000);\n\t\treturn () => {\n\t\t\tclearInterval(interval);\n\t\t};\n\t});\n\n\tReact.useEffect(() => {\n\t\tif (gameInfo != null) {\n\t\t\tsetNumPlayers(() => {\n\t\t\t\tlet count = 0\n\t\t\t\tfor (let id=0; id < gameInfo.players.length; id ++) {\n\t\t\t\t\tif (gameInfo.players[id].name != null) {\n\t\t\t\t\t\tcount ++\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn count\n\t\t\t})\n\t\t}\n\t}, [gameInfo, playerCredentials, playerID, sit])\n\n\tfunction stand(updateAfter=true) {\n\t\tconst opts = {\n\t\t\t\tplayerID: playerID,\n\t\t\t\tcredentials: playerCredentials\n\t\t\t} \n\t\tfetch(serverPath + \"/\" + gameInfo.roomID + \"/leave\", {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\tbody: JSON.stringify(opts)\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tif (updateAfter) updateGameInfo()\n\t\t\t})\n\t\tsetPlayerID(-1)\n\t}\n\n\tfunction onLeaveClick() {\n\t\tconsole.log(\"Leaving...\")\n\t\tsetShowConfirmLeave(true)\t\t\n\t}\n\n\tfunction leave() {\n\t\tstand(false)\n\t\tdata.backToEntry()\n\t}\n\n\tfunction dialog(text, showState, setShowState) {\n\t\t// defaults\n\t\tif (text.confirm === undefined) text.confirm = \"Confirm\"\n\t\treturn(\n\t\t\t<Modal show={showState} onHide={() => setShowState(false)}>\n\t\t\t\t{text.header && \n\t\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t\t<Modal.Title>{text.header}</Modal.Title>\n\t\t\t\t\t</Modal.Header>\n\t\t\t\t}\n\t\t\t\t<Modal.Body>{text.body}</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={() => setShowState(false)}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => {\n\t\t\t\t\t\t\tleave()\n\t\t\t\t\t\t\tsetShowState(false)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t{text.confirm}\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n\tif (gameInfo == null) {\n\t\tupdateGameInfo()\n\t\treturn(<div>Connecting... {serverPath}</div>)\n\t}\n\telse {\n\t\treturn(\n\t\t\t<div className=\"lobby\">\n\t\t\t\t<div>\n\t\t\t\t\tgameID: {gameInfo.roomID}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tgameInfo.players.map((x, i) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<div key={i}>\n\t\t\t\t\t\t\t\t{x.id} - {x.name}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={sit} disabled={playerID >= 0}>Sit</Button>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={stand} disabled={playerID < 0 || numPlayers === 1}>Stand</Button>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={onLeaveClick}>Leave</Button>\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => startGame(data.gameID, playerID, playerCredentials)} disabled={numPlayers < gameInfo.players.length}>Start</Button>\n\t\t\t\t</div>\n\n\t\t\t\t{/* Confirm leave dialog */}\n\n\t\t\t\t{dialog({\n\t\t\t\t\t\theader: \"Leaving\",\n\t\t\t\t\t\tbody: \"Are you sure you'd like to leave?\",\n\t\t\t\t\t\tconfirm: \"Leave\"\n\t\t\t\t\t},\n\t\t\t\t\tshowConfirmLeave, setShowConfirmLeave)}\n\n\t\t\t</div>\n\n\t\t)\n\t}\n\n}\n\nexport default Wait;","import React from 'react'\nimport Entry from './Entry'\nimport Join from './Join'\nimport Create from './Create'\nimport Wait from './Wait'\n\nfunction Lobby({serverPath, startGame}) {\n\n\tconst [name, setName] = React.useState(\"\");\n\tconst [lobbyState, setLobbyState] = React.useState(\"entry\");\n\tconst [gameID, setGameID] = React.useState(\"\");\n\tconst [numPlayers, setnumPlayers] = React.useState(4);\n\tconst [numCats, setNumCats] = React.useState(5);\n\n\tfunction onNameChange(event) {\n\t\tsetName(event.target.value);\n\t}\n\n\tfunction onGameIDChange(event) {\n\t\tsetGameID(event.target.value)\n\t}\n\n\tfunction onNumPlayersChange(val) {\n\t\tsetnumPlayers(val)\n\t}\n\n\tfunction onNumCatsChange(val) {\n\t\tsetNumCats(val)\n\t}\n\n\tfunction onJoinClick() {\n\t\tsetLobbyState(\"join\")\n\t}\n\n\tfunction onCreateClick() {\n\t\tsetLobbyState(\"create\")\n\t}\n\n\tfunction onJoinJoinClick() {\n\t\tconsole.log(\"Joining a game...\", gameID)\n\t\tjoinGame()\n\t}\n\n\tfunction onCreateCreateClick() {\n\t\tconsole.log(\"Creating game...\")\n\t\tcreateGame().then(x => {\n\t\t\tconsole.log(\"Game created\", x.gameID)\n\t\t\tsetGameID(x.gameID)\n\t\t\tjoinGame()\n\t\t})\n\t}\n\n\t/**\n\t * Creates a game.\n\t *\n\t * @return     A promise to gameID.\n\t */\n\tfunction createGame() {\n\t\t// const opts = {numPlayers: numPlayers, setupData: {}}\n\t\tconsole.log(\"Creating game...\")\n\t\treturn fetch(serverPath + \"/create\", {\n\t\t\tmethod: \"post\",\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\n\t\t\tbody: JSON.stringify({numPlayers: numPlayers, setupData: {numCats: numCats, numTiles: 16}})\n\t\t})\n\t\t\t.then(response => response.json())\n\t}\n\n\t/**\n\t * Enters a game with a given gameID.\n\t * Note that this doesn't actually \"join\" the game\n\t * (i.e. pick a seat, get credentials, etc.), but\n\t * just enter into the room and display the information\n\t * (see who's there, which seats are available, etc.)\n\t *\n\t * @param      {string}  gameID  The game ID.\n\t */\n\tfunction joinGame() {\n\t\tsetLobbyState(\"wait\")\n\t}\n\n\tfunction backToEntry() {\n\t\tsetLobbyState(\"entry\")\n\t}\n\n\tconst data = {\n\t\tname: name,\n\t\tgameID: gameID,\n\t\tnumPlayers: numPlayers,\n\t\tnumCats: numCats,\n\t\tonNameChange: onNameChange,\n\t\tonGameIDChange: onGameIDChange,\n\t\tonNumPlayersChange: onNumPlayersChange,\n\t\tonNumCatsChange: onNumCatsChange,\n\t\tbackToEntry: backToEntry,\n\t}\n\n\tif (lobbyState === \"entry\") {\n\t\treturn(<Entry data={data} onJoinClick={onJoinClick} onCreateClick={onCreateClick} />)\n\t}\n\telse if (lobbyState === \"join\") {\n\t\treturn(<Join data={data} onJoinJoinClick={onJoinJoinClick} />)\n\t}\n\telse if (lobbyState === \"create\") {\n\t\treturn(<Create data={data} onCreateCreateClick={onCreateCreateClick} />)\n\t}\n\telse if (lobbyState === \"wait\") {\n\t\tconsole.log(\"name\", name)\n\t\treturn(<Wait data={data} serverPath={serverPath} startGame={startGame} />)\n\t}\n\n}\n\nexport default Lobby;","import React from 'react';\n\nexport default function Cell({className, cellData, cell_id, playerID, gameMetadata, prePlaceMod, preMoveMod, preFlipMod}) {\n\n\tfunction allowDrop(e) {\n\t\te.preventDefault();\n\t}\n\n\tfunction drop(e) {\n\t\te.preventDefault();\n\t\tprePlaceMod(Number(cell_id), e.dataTransfer.getData(\"type\"))\n\t}\n\n\tfunction handleModClick() {\n\t\tpreFlipMod(Number(cell_id))\n\t}\n\n\tfunction drag(e) {\n\t\te.dataTransfer.setData(\"type\", \"move\")\n\t}\n\n\treturn (\n\t\t<div className={\"cell \" + className} onDragOver={allowDrop} onDrop={drop}>\n\t\t\t<div className=\"cell-content\">\n\t\t\t{\n\t\t\t\tcellData.stack.slice(0).reverse().map((x, i) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<div className={`token tokencolor-${x+1}`} key={\"cat_stack\" + i}>\n\t\t\t\t\t\t\t{x}<br />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t}\n\t\t\t</div>\n\t\t\t{cellData.mod &&\n\t\t\t\t<div className={`cell-mod card ${cellData.mod.type}`}\n\t\t\t\t\t\tonClick={handleModClick}\n\t\t\t\t\t\tdraggable={playerID === cellData.mod.playerID}\n\t\t\t\t\t\tonDragStart={drag}>\n\t\t\t\t\t{gameMetadata[cellData.mod.playerID].name}\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n\n}","import React from 'react'\nimport Cell from './Cell'\nimport {Button, Modal} from 'react-bootstrap'\n\nexport default function RaceTrack({G, playerID, gameMetadata, placeMod, moveMod, removeMod, flipMod}) {\n\n\tconst [showPlaceDialog, setShowPlaceDialog] = React.useState(false)\n\tconst [showFlipDialog, setShowFlipDialog] = React.useState(false)\n\tconst [cellID, setCellID] = React.useState(null)\n\tconst [type, setType] = React.useState(null)\n\t\n\tfunction prePlaceMod(cellID, type) {\n\t\tif (type === \"place\" && G.players[playerID].modPos > -1) {\n\t\t\tconsole.error(\"Player has already placed his/her mod.\")\n\t\t\treturn\n\t\t}\n\t\tif (G.board[cellID].stack.length > 0) {\n\t\t\tconsole.error(\"Cannot place mod where cats are.\")\n\t\t\treturn\n\t\t}\n\t\tif ((cellID > 0 && G.board[cellID-1].mod !== null && G.board[cellID-1].mod.playerID !== playerID)\n\t\t\t\t|| (cellID < G.board.length - 1 && G.board[cellID+1].mod !== null && G.board[cellID+1].mod !== playerID)) {\n\t\t\tconsole.error(\"Cannot place mod adjacent to an existing mod.\")\n\t\t\treturn\n\t\t}\n\t\tif (G.board[cellID].mod !== null) {\n\t\t\tif (G.board[cellID].mod.playerID === playerID)\n\t\t\t\treturn\n\t\t\tconsole.error(\"Cannot place mod on top of an existing mod.\")\n\t\t\treturn\n\t\t}\n\t\tsetCellID(cellID)\n\t\tsetType(type)\n\t\tsetShowPlaceDialog(true)\n\t}\n\n\tfunction preFlipMod(cellID) {\n\t\tsetCellID(cellID)\n\t\tsetShowFlipDialog(true)\n\t}\n\n\tfunction PlaceDialog() {\n\t\treturn (\n\t\t\t<Modal show={showPlaceDialog} onHide={() => setShowPlaceDialog(false)}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Placing Mod</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>Which kind of mod would you like to place?</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={() => setShowPlaceDialog(false)}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"danger\" onClick={() => {\n\t\t\t\t\t\t\tconsole.log(\"Place tape mod\")\n\t\t\t\t\t\t\tif (type === \"place\")\n\t\t\t\t\t\t\t\tplaceMod(playerID, cellID, \"tape\")\n\t\t\t\t\t\t\telse if (type === \"move\")\n\t\t\t\t\t\t\t\tmoveMod(playerID, cellID, \"tape\")\n\t\t\t\t\t\t\tsetShowPlaceDialog(false)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tTape\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"success\" onClick={() => {\n\t\t\t\t\t\t\tconsole.log(\"Place cucumber mod\")\n\t\t\t\t\t\t\tif (type === \"place\")\n\t\t\t\t\t\t\t\tplaceMod(playerID, cellID, \"cucumber\")\n\t\t\t\t\t\t\telse if (type === \"move\")\n\t\t\t\t\t\t\t\tmoveMod(playerID, cellID, \"cucumber\")\n\t\t\t\t\t\t\tsetShowPlaceDialog(false)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tCucumber\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n\tfunction FlipDialog() {\n\t\treturn (\n\t\t\t<Modal show={showFlipDialog} onHide={() => setShowFlipDialog(false)}>\n\t\t\t\t<Modal.Header closeButton>\n\t\t\t\t\t<Modal.Title>Flipping Mod</Modal.Title>\n\t\t\t\t</Modal.Header>\n\t\t\t\t<Modal.Body>Would you like to flip the mod?</Modal.Body>\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"secondary\" onClick={() => setShowFlipDialog(false)}>\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"outline-primary\" onClick={() => {\n\t\t\t\t\t\t\tconsole.log(\"Remove mod\")\n\t\t\t\t\t\t\tremoveMod(playerID)\n\t\t\t\t\t\t\tsetShowFlipDialog(false)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tRemove\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => {\n\t\t\t\t\t\t\tconsole.log(\"Flip mod\")\n\t\t\t\t\t\t\tflipMod(playerID)\n\t\t\t\t\t\t\tsetShowFlipDialog(false)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tFlip\n\t\t\t\t\t</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t)\n\t}\n\n\treturn(\n\t\t<React.Fragment>\n\n\t\t\t<div className=\"board\">\n\t\t\t\t{\n\t\t\t\t\tG.board.slice(0, G.numTiles).map((cell, i) => <Cell\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcellData={cell}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell_id={i}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplayerID={playerID}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgameMetadata={gameMetadata}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprePlaceMod={prePlaceMod}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreFlipMod={preFlipMod}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tG.board.slice(G.numTiles).map((cell, i) => <Cell\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell-extra\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcellData={cell}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell_id={i}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplayerID={playerID}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgameMetadata={gameMetadata}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprePlaceMod={prePlaceMod}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreFlipMod={preFlipMod}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t\t<PlaceDialog />\n\t\t\t<FlipDialog />\n\n\t\t</React.Fragment>\n\t)\n\n}\n","import React from 'react'\nimport {ListGroup} from 'react-bootstrap'\n\nfunction Players({currentPlayer, players, gameMetadata}) {\n\treturn(\n\t\t<div className=\"players\">\n\t\t\t<ListGroup>\n\t\t\t{\n\t\t\t\tgameMetadata.map((x, i) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<ListGroup.Item active={x.id === Number(currentPlayer)} className=\"flex\" key={\"player\" + i}>\n\t\t\t\t\t\t\t{`${x.name} (${players[i].coins})`}\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tplayers[i].smallBets.map((color, j) => {\n\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t<React.Fragment key={\"smallBets\" + j}>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tcolor.map(card => {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <div className={`tokencolor-${j+1} card`} key={\"smallBet\" + i}>{card}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t\t</ListGroup>\n\t\t</div>\n\t)\n}\n\nexport default Players;","import React from 'react'\nimport {ListGroup} from 'react-bootstrap'\n\nexport default function RolledDice({dice}) {\n\treturn(\n\t\t<div>\n\t\t\t<div className=\"section\">Rolled dice</div>\n\t\t\t<ListGroup horizontal>\n\t\t\t{\n\t\t\t\tdice.map((x, i) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<ListGroup.Item className={`tokencolor-${i+1}`} key={i}>\n\t\t\t\t\t\t\t{x}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t\t</ListGroup>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport {ListGroup} from 'react-bootstrap'\n\nfunction SmallStack({stack, makeSmallBet}) {\n\treturn(\n\t\t<div>\n\t\t\t<div className=\"section\">SmallStack</div>\n\t\t\t<ListGroup horizontal>\n\t\t\t{\n\t\t\t\tstack.map((x, i) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<ListGroup.Item className={`tokencolor-${i+1}`} onClick={() => makeSmallBet(i)} key={i}>\n\t\t\t\t\t\t\t{x[x.length - 1]}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t\t</ListGroup>\n\t\t</div>\n\t)\n}\n\nexport default SmallStack;","import React from 'react'\n\n\n\nexport default function BetCards({cards}) {\n\n\tfunction drag(e) {\n\t\te.dataTransfer.setData(\"betID\", e.target.getAttribute(\"bet_id\"))\n\t}\n\n\treturn(\n\t\t<div>\n\t\t\t<div className=\"section\">Bet Cards</div>\n\t\t\t\t<div className=\"flex\">\n\t\t\t\t{\n\t\t\t\t\tcards.map((x, i) => {\n\t\t\t\t\t\tif (x) {\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={`tokencolor-${i+1} card`}\n\t\t\t\t\t\t\t\t\t\tbet_id={i}\n\t\t\t\t\t\t\t\t\t\tdraggable=\"true\"\n\t\t\t\t\t\t\t\t\t\tonDragStart={drag}\n\t\t\t\t\t\t\t\t\t\tkey={\"betCards\" + i}>\n\t\t\t\t\t\t\t\t\tX\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\n\nexport default function BetZone({stack, playerID, makeBigBet, side}) {\n\n\tfunction allowDrop(e) {\n\t  e.preventDefault();\n\t}\n\n\tfunction drop(e) {\n\t\te.preventDefault();\n\t\tconsole.log(\"dropped\", e.dataTransfer.getData(\"betID\"))\n\t\tmakeBigBet(playerID, Number(e.dataTransfer.getData(\"betID\")), side)\n\t}\n\n\treturn(\n\t\t<div className=\"betzone\" onDragOver={allowDrop} onDrop={drop}>\n\t\t\t{`${side}: ${stack[side].length}`}\n\t\t</div>\n\t)\n\n}","import React from 'react'\n\nexport default function Mod({hasMod, playerID}) {\n\n\tfunction drag(e) {\n\t\te.dataTransfer.setData(\"playerID\", e.target.getAttribute(\"player_id\"))\n\t\te.dataTransfer.setData(\"type\", \"place\")\n\t}\n\n\treturn(\n\t\t<div>\n\t\t\t<div className=\"section\">Mod Tile</div>\n\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"card\"\n\t\t\t\t\t\t\tdraggable={hasMod}\n\t\t\t\t\t\t\tplayer_id={playerID}\n\t\t\t\t\t\t\tonDragStart={drag}>\n\t\t\t\t\t\t{hasMod ? \"X\" : \"–\"}\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport RaceTrack from './RaceTrack'\nimport Players from './Players'\nimport RolledDice from './RolledDice'\nimport SmallStack from './SmallStack'\nimport BetCards from './BetCards'\nimport BetZone from './BetZone'\nimport Mod from './Mod'\nimport {Button} from 'react-bootstrap'\n\nfunction GameScreen({G, ctx, moves, playerID, gameMetadata}) {\n\n\tfunction roll() {\n\t\tmoves.roll(playerID)\n\t}\n\n\tfunction makeSmallBet(bet) {\n\t\tif (G.smallStack[bet].length > 0)\n\t\t\tmoves.makeSmallBet(playerID, bet)\n\t}\n\n\tfunction makeBigBet(playerID, bet, side) {\n\t\tconsole.log(\"bigbet...\", playerID, bet, side)\n\t\tmoves.makeBigBet(playerID, bet, side)\n\t}\n\n\tfunction placeMod(playerID, cellID, type) {\n\t\tconsole.log(\"Trying to place mod:\", playerID, cellID, type)\n\t\tmoves.placeMod(playerID, cellID, type)\n\t}\n\n\tfunction removeMod(playerID) {\n\t\tconsole.log(\"Remove mod\")\n\t\tmoves.removeMod(playerID)\n\t}\n\n\tfunction flipMod(playerID, cellID) {\n\t\tconsole.log(\"Flip mod\")\n\t\tmoves.flipMod(playerID, cellID)\n\t}\n\n\tfunction moveMod(playerID, newCellID, type) {\n\t\tconsole.log(\"Move mod\")\n\t\tmoves.moveMod(playerID, newCellID, type)\n\t}\n\n\t// convert string back to number for easier processing\n\tplayerID = Number(playerID)\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"flex\">\n\t\t\t\t<div className=\"control\">\n\t\t\t\t\t<div className=\"section\">Camaew Up!</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Players currentPlayer={ctx.currentPlayer} players={G.players} gameMetadata={gameMetadata} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={roll}>Roll</Button>\n\t\t\t\t\t\t<RolledDice dice={G.dice} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"control\">\n\t\t\t\t\t<Mod hasMod={G.players[playerID].modPos === -1} playerID={playerID} />\n\t\t\t\t\t<SmallStack stack={G.smallStack} makeSmallBet={makeSmallBet} />\n\t\t\t\t\t<BetCards cards={G.players[playerID].betCards} />\n\t\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t\t<BetZone stack={G.bigStack} playerID={playerID} makeBigBet={makeBigBet} side=\"win\" />\n\t\t\t\t\t\t<BetZone stack={G.bigStack} playerID={playerID} makeBigBet={makeBigBet} side=\"lose\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<RaceTrack\n\t\t\t\t\tG={G}\n\t\t\t\t\tplayerID={playerID}\n\t\t\t\t\tgameMetadata={gameMetadata}\n\t\t\t\t\tplaceMod={placeMod}\n\t\t\t\t\tmoveMod={moveMod}\n\t\t\t\t\tremoveMod={removeMod}\n\t\t\t\t\tflipMod={flipMod} />\n\t\t</React.Fragment>\n\t);\n\n}\n\nexport default GameScreen;","import React, {useState, useEffect} from 'react'\nimport {Client} from 'boardgame.io/react'\nimport {SocketIO} from 'boardgame.io/multiplayer'\nimport CamaewUp from './CamaewUp'\nimport Lobby from './lobby/Lobby'\nimport GameScreen from './game/GameScreen'\nimport { createBrowserHistory } from 'history'\n\nimport './style.css'\n\nconst socket = \"http://c91fdc5aa037.ngrok.io\"\n\nconst CamaewUpClient = Client({game: CamaewUp,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t board: GameScreen,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t multiplayer: SocketIO({server: socket}),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t debug: false\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t })\n\nconst serverPath = socket + \"/games/CamaewUp\"\nconst history = createBrowserHistory()\n\nfunction App() {\n\n\tconst [state, setState] = useState(\"lobby\");\n\tconst [data, setData] = useState({})\n\n\tfunction startGame(gameID, playerID, credentials) {\n\t\tsetData({gameID: gameID, playerID: playerID, credentials: credentials})\n\t\tsetState(\"game\")\n\t}\n\n\tuseEffect(() => {\n\t\tif (state.name === \"game\") {\n\t\t\thistory.push('?' + state.gameID)\n\t\t}\n\t}, [state.name, state.gameID])\n\n\tif (state === \"lobby\") {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<Lobby serverPath={serverPath} startGame={startGame}/>\n\t\t\t</div>\n\t\t)\n\t}\n\telse if (state === \"game\") {\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<CamaewUpClient gameID={data.gameID} playerID={String(data.playerID)} credentials={data.credentials} />\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}