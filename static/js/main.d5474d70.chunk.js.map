{"version":3,"sources":["CamaewUp.js","lobby/Entry.js","lobby/Join.js","lobby/Create.js","lobby/Wait.js","lobby/Lobby.js","game/Cell.js","game/RaceTrack.js","game/Players.js","game/RolledDice.js","game/SmallStack.js","game/BetCards.js","game/BetZone.js","game/Mod.js","game/LogArea.js","game/GameScreen.js","App.js","index.js"],"names":["genArray","size","data","a","Array","i","cloneDeep","rankCats","G","indices","from","numCats","x","sort","b","pos","stack","board","indexOf","resetSmallRound","ctx","dice","fill","numPlayers","players","smallBets","removeMod","smallStack","scoreSmallRound","rank","smallBetWins","sum","length","j","coins","rollDice","playerID","numDiceLeft","filter","dieRolled","random","Die","roll","lastDiceRolled","console","error","catID","curCellNum","curStack","curCell","curLayer","slice","concat","cleanUp","moveCat","placeMod","cellID","type","mod","modPos","log","message","logArray","push","CamaewUp","name","setup","setupData","numTiles","betCards","bigStack","move","text","moves","resolveBoard","winnings","win","curBet","bet","pop","losings","lose","scoreRace","maxCoins","winners","getWinners","makeSmallBet","card","makeBigBet","side","flipMod","newType","moveMod","turn","moveLimit","onEnd","onMove","minPlayers","maxPlayers","Entry","onJoinClick","onCreateClick","id","className","Form","Label","Control","value","serverPath","onChange","onServerPathChange","Button","variant","onClick","Join","onJoinJoinClick","onNameChange","gameID","onGameIDChange","disabled","backToEntry","Create","onCreateCreateClick","ToggleButtonGroup","onNumPlayersChange","ToggleButton","onNumCatsChange","Check","label","Wait","showState","setShowState","startGame","React","useState","gameInfo","setGameInfo","setNumPlayers","setPlayerID","playerCredentials","setPlayerCredentials","showConfirmLeave","setShowConfirmLeave","updateGameInfo","useCallback","fetch","serverPathFull","method","then","response","json","findSeat","sit","seatID","opts","playerName","roomID","headers","body","JSON","stringify","stand","updateAfter","credentials","useEffect","interval","setInterval","clearInterval","count","map","key","undefined","header","confirm","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Lobby","setName","lobbyState","setLobbyState","setServerPath","setGameID","setnumPlayers","setNumCats","joinGame","event","target","val","Cell","cellData","cell_id","gameMetadata","prePlaceMod","preFlipMod","preMoveMod","onDragOver","e","preventDefault","onDrop","Number","dataTransfer","getData","reverse","draggable","onDragStart","setData","RaceTrack","showPlaceDialog","setShowPlaceDialog","showFlipDialog","setShowFlipDialog","setCellID","setType","PlaceDialog","FlipDialog","Fragment","cell","Players","currentPlayer","ListGroup","Item","active","color","RolledDice","horizontal","SmallStack","BetCards","cards","drag","getAttribute","bet_id","BetZone","Mod","hasMod","player_id","LogArea","logArea","useRef","current","scrollTop","scrollHeight","ref","GameScreen","newCellID","CamaewUpClient","history","createBrowserHistory","App","state","setState","Client","game","multiplayer","SocketIO","server","debug","String","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5474d70.chunk.js","sourcesContent":["import {sum, cloneDeep} from 'lodash'\r\n\r\nfunction genArray(size, data) {\r\n\tlet a = new Array(size );\r\n\tfor (let i = 0; i < size; i ++) {\r\n\t\ta[i] = cloneDeep(data);\r\n\t}\r\n\treturn a\r\n}\r\n\r\nfunction rankCats(G) {\r\n\tlet indices = Array.from(new Array(G.numCats), (x, i) => i)\r\n\tindices.sort((a, b) => {\r\n\t\tif (G.pos[a] !== G.pos[b])\r\n\t\t\treturn G.pos[b] - G.pos[a]\r\n\t\telse {\r\n\t\t\t// break tie with stack order\r\n\t\t\tconst stack = G.board[G.pos[a]].stack\r\n\t\t\treturn stack.indexOf(b) - stack.indexOf(a)\r\n\t\t}\r\n\t});\r\n\treturn indices\r\n\t// let ret = Array(G.numCats)\r\n\t// for (let i = 0; i < G.numCats; i ++) {\r\n\t// \tret[indices[i]] = i\r\n\t// }\r\n\t// return ret;\r\n}\r\n\r\nfunction resetSmallRound(G, ctx) {\r\n\t// reset dice\r\n\tG.dice = Array(G.numCats).fill(0)\r\n\r\n\tfor (let i = 0; i < ctx.numPlayers; i ++) {\r\n\t\tG.players[i].smallBets = Array(G.numCats).fill([])\r\n\t\tremoveMod(G, i)\r\n\t}\r\n\r\n\tG.smallStack = Array(G.numCats).fill([2, 3, 5])\r\n\r\n}\r\n\r\nfunction scoreSmallRound(G, ctx) {\r\n\t// console.log(\"End of small round.\")\r\n\r\n\t// reset dice\r\n\tG.dice = Array(G.numCats).fill(0)\r\n\r\n\t// get ranks\r\n\tconst rank = rankCats(G)\r\n\t\r\n\tfor (let i = 0; i < ctx.numPlayers; i ++) {\r\n\t\t\r\n\t\t// small bets\r\n\t\tlet smallBetWins = 0\r\n\t\tsmallBetWins += sum(G.players[i].smallBets[rank[0]])\r\n\t\tsmallBetWins += G.players[i].smallBets[rank[1]].length\r\n\t\tfor (let j = 2; j < G.numCats; j ++) {\r\n\t\t\tsmallBetWins -= G.players[i].smallBets[rank[j]].length\t\r\n\t\t}\r\n\t\t// console.log(\"Small bet wins for\", i, smallBetWins)\r\n\t\tG.players[i].coins += smallBetWins\r\n\t\t// G.players[i].smallBets = Array(G.numCats).fill([])\r\n\t\r\n\t\t// remove mods\r\n\t\t// removeMod(G, i)\r\n\r\n\t}\r\n\r\n\t// G.smallStack = Array(G.numCats).fill([2, 3, 5])\r\n\r\n}\r\n\r\nfunction scoreRace(G, ctx) {\r\n\t// console.log(\"End of race.\")\r\n\tconst rank = rankCats(G)\r\n\r\n\t// winning pile\r\n\tlet winnings = [1, 2, 3, 5, 8]\r\n\tfor (let i = 0; i < G.bigStack.win.length; i ++) {\r\n\t\tconst curBet = G.bigStack.win[i]\r\n\t\tif (curBet.bet === rank[0]) {\r\n\t\t\t// winning bet\r\n\t\t\tG.players[curBet.playerID].coins += winnings.pop()\r\n\t\t}\r\n\t\telse {\r\n\t\t\tG.players[curBet.playerID].coins -= 1\r\n\t\t}\r\n\t\tif (winnings.length === 0)\r\n\t\t\twinnings = [1]\r\n\t}\r\n\r\n\t// losing pile\r\n\tlet losings = [1, 2, 3, 5, 8]\r\n\tfor (let i = 0; i < G.bigStack.lose.length; i ++) {\r\n\t\tconst curBet = G.bigStack.lose[i]\r\n\t\tif (curBet.bet === rank[G.numCats - 1]) {\r\n\t\t\t// winning bet\r\n\t\t\tG.players[curBet.playerID].coins += losings.pop()\r\n\t\t}\r\n\t\telse {\r\n\t\t\tG.players[curBet.playerID].coins -= 1\r\n\t\t}\r\n\t\tif (losings.length === 0)\r\n\t\t\tlosings = [1]\r\n\t}\r\n\r\n}\r\n\r\nfunction getWinners(G) {\r\n\tlet maxCoins = [G.players[0].coins]\r\n\tlet winners = [0]\r\n\tfor (let i = 1; i < G.numPlayers; i ++) {\r\n\t\tif (G.players[i].coins > maxCoins) {\r\n\t\t\tmaxCoins = G.players[i].coins\r\n\t\t\twinners = [i]\r\n\t\t}\r\n\t\telse if (G.players[i].coins === maxCoins) {\r\n\t\t\twinners.push(i)\r\n\t\t}\r\n\t}\r\n\treturn winners\r\n}\r\n\r\nfunction moveCat(G, ctx, catID, roll) {\r\n\r\n\tconst curCellNum = G.pos[catID]\r\n\tlet curStack = []\r\n\r\n\tif (curCellNum >= 0) {\r\n\t\tconst curCell = G.board[curCellNum].stack\r\n\t\tconst curLayer = curCell.indexOf(catID)\r\n\t\tcurStack = curCell.slice(curLayer)\r\n\t\t// update old cell\r\n\t\t// console.log(\"curStack\", curStack)\r\n\t\tG.board[curCellNum].stack = G.board[curCellNum].stack.slice(0, curLayer)\r\n\t}\r\n\telse {\r\n\t\tcurStack = [catID]\r\n\t}\r\n\t// update new cell\r\n\tG.board[curCellNum + roll].stack = G.board[curCellNum + roll].stack.concat(curStack)\r\n\r\n\tfor (let i = 0; i < curStack.length; i ++) {\r\n\t\tG.pos[curStack[i]] += roll\t\r\n\t}\r\n\r\n\tG.cleanUp = curCellNum + roll\r\n\r\n\t// await new Promise(r => setTimeout(r, 1000));\r\n\t// // setTimeout(() => resolveBoard(G, ctx, curCellNum + roll), 1000)\r\n\t// resolveBoard(G, ctx, curCellNum + roll)\r\n\r\n}\r\n\r\nfunction resolveBoard(G, ctx) {\r\n\r\n\tconst mod = G.board[G.cleanUp].mod\r\n\r\n\tif (mod === null) {\r\n\t\treturn null\r\n\t}\r\n\telse {\r\n\t\tG.players[mod.playerID].coins += 1\r\n\t\tconst curStack = G.board[G.cleanUp].stack\r\n\t\tG.board[G.cleanUp].stack = []\r\n\t\tif (mod.type === \"tape\") {\r\n\t\t\tG.board[G.cleanUp - 1].stack = curStack.concat(G.board[G.cleanUp - 1].stack)\r\n\t\t\tfor (let i = 0; i < curStack.length; i ++) {\r\n\t\t\t\tG.pos[curStack[i]] = G.cleanUp - 1\r\n\t\t\t}\r\n\t\t\treturn \"tape\"\r\n\t\t}\r\n\t\telse if (mod.type === \"cucumber\") {\r\n\t\t\tG.board[G.cleanUp + 1].stack = G.board[G.cleanUp + 1].stack.concat(curStack)\r\n\t\t\tfor (let i = 0; i < curStack.length; i ++) {\r\n\t\t\t\tG.pos[curStack[i]] = G.cleanUp + 1\r\n\t\t\t}\r\n\t\t\treturn \"cucumber\"\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\nfunction rollDice(G, ctx, playerID) {\r\n\r\n\t// random dice first\r\n\tconst numDiceLeft = G.dice.filter(x => x === 0).length\r\n\tconst dieRolled = ctx.random.Die(numDiceLeft) - 1\r\n\tconst roll = ctx.random.Die(3)\r\n\tlet i = 0\r\n\tlet j = 0\r\n\tfor (j = 0; j < G.numCats; j ++) {\r\n\t\tif (G.dice[j] === 0) {\r\n\t\t\tif (i === dieRolled) {\r\n\t\t\t\tG.dice[j] = roll;\r\n\t\t\t\tG.lastDiceRolled = j;\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\ti ++\r\n\t\t}\r\n\t}\r\n\tif (j === G.numCats) {\r\n\t\tconsole.error(\"Something's wrong. The dice probably didn't get reset.\")\r\n\t}\r\n\r\n\t// move cat `j`` by `roll` accordingly\r\n\tmoveCat(G, ctx, j, roll)\r\n\tif (playerID != null)\r\n\t\tG.players[playerID].coins += 1\r\n\r\n\treturn [j, roll]\r\n\r\n}\r\n\r\nfunction makeSmallBet(G, playerID, bet) {\r\n\tconst card = G.smallStack[bet].pop()\r\n\tG.players[playerID].smallBets[bet].push(card)\r\n\treturn card\r\n}\r\n\r\nfunction makeBigBet(G, playerID, bet, side) {\r\n\tG.bigStack[side].push({playerID: playerID, bet: bet})\r\n\tG.players[playerID].betCards[bet] = false\r\n}\r\n\r\nfunction placeMod(G, playerID, cellID, type) {\r\n\tG.board[cellID].mod = {playerID: playerID, type: type}\r\n\tG.players[playerID].modPos = cellID\r\n}\r\n\r\nfunction removeMod(G, playerID) {\r\n\tif (G.players[playerID].modPos > -1) {\r\n\t\tG.board[G.players[playerID].modPos].mod = null\r\n\t\tG.players[playerID].modPos = -1\t\r\n\t}\r\n}\r\n\r\nfunction log(G, message) {\r\n\tG.logArray.push(message)\r\n}\r\n\r\nconst CamaewUp = {\r\n\tname: \"CamaewUp\",\r\n\tsetup: (ctx, setupData) => {\r\n\t\tlet G = {\r\n\t\t\tnumCats: setupData.numCats,\r\n\t\t\tnumTiles: setupData.numTiles,\r\n\t\t\tnumPlayers: ctx.numPlayers,\r\n\t\t\tdice: Array(setupData.numCats).fill(0),\r\n\t\t\tlastDiceRolled: -1,\r\n\t\t\tcleanUp: -1,\r\n\t\t\tpos: Array(setupData.numCats).fill(-1),\r\n\t\t\tboard: genArray(setupData.numTiles + 3, {stack: [], mod: null}),\r\n\t\t\tplayers: genArray(ctx.numPlayers, {coins: 3,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsmallBets: Array(setupData.numCats).fill([]),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbetCards: Array(setupData.numCats).fill(true),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmodPos: -1}),\r\n\t\t\tsmallStack: Array(setupData.numCats).fill([2, 3, 5]),\r\n\t\t\tbigStack: {\"win\": [], \"lose\": []},\r\n\t\t\tlogArray: ['abc'],\r\n\t\t}\r\n\t\tlog(G, {move: \"text\", text: \"Welcome!\"})\r\n\r\n\t\tfor (let i = 0; i < G.numCats; i ++)\r\n\t\t\trollDice(G, ctx)\r\n\t\tresetSmallRound(G, ctx)\r\n\t\treturn G\r\n\t},\r\n\tmoves: {\r\n\t\troll: (G, ctx, playerID) => {\r\n\t\t\tconst [catID, roll] = rollDice(G, ctx, playerID)\r\n\t\t\tlog(G, {playerID: playerID, move: \"roll\", catID: catID, roll: roll})\r\n\t\t\tconst mod = resolveBoard(G, ctx)\r\n\t\t\tif (mod !== null)\r\n\t\t\t\tlog(G, {move: \"mod\", mod: mod})\r\n\t\t\tif (G.cleanUp >= G.numTiles) {\r\n\t\t\t\t// end game\r\n\t\t\t\tscoreSmallRound(G, ctx)\r\n\t\t\t\tscoreRace(G, ctx)\r\n\t\t\t\tconst winners = getWinners(G)\r\n\t\t\t\tlog(G, {move: \"text\", text: \"Winners: \" + winners})\r\n\t\t\t\tlog(G, {move: \"text\", text: \"--- End of game ---\"})\r\n\t\t\t}\r\n\t\t\tif (G.dice.filter(x => x === 0).length === 0) {\r\n\t\t\t\tlog(G, {move: \"text\", text: \"--- End of small round ---\"})\r\n\t\t\t\tscoreSmallRound(G, ctx)\r\n\t\t\t\tresetSmallRound(G, ctx)\r\n\t\t\t}\r\n\t\t},\r\n\t\tmakeSmallBet: (G, ctx, playerID, bet) => {\r\n\t\t\tconst card = makeSmallBet(G, playerID, bet)\r\n\t\t\tlog(G, {playerID: playerID, move: \"smallBet\", catID: bet, card: card})\r\n\t\t},\r\n\t\tmakeBigBet: (G, ctx, playerID, bet, side) => {\r\n\t\t\tmakeBigBet(G, playerID, bet, side)\r\n\t\t\tlog(G, {playerID: playerID, move: \"bigBet\", side: side})\r\n\t\t},\r\n\t\tplaceMod: (G, ctx, playerID, cellID, type) => {\r\n\t\t\tplaceMod(G, playerID, cellID, type)\r\n\t\t\tlog(G, {playerID: playerID, move: \"placeMod\", cellID: cellID, type: type})\r\n\t\t},\r\n\t\tremoveMod: (G, ctx, playerID) => {\r\n\t\t\tremoveMod(G, playerID)\r\n\t\t\tlog(G, {playerID: playerID, move: \"removeMod\", cellID: G.players[playerID].modPos})\r\n\t\t},\r\n\t\tflipMod: (G, ctx, playerID) => {\r\n\t\t\tconst newType = G.board[G.players[playerID].modPos].mod.type === \"tape\" ? \"cucumber\" : \"tape\"\r\n\t\t\tconst cellID = G.players[playerID].modPos\r\n\t\t\tremoveMod(G, playerID)\r\n\t\t\tplaceMod(G, playerID, cellID, newType)\r\n\t\t\tlog(G, {playerID: playerID, move: \"flipMod\", cellID: G.players[playerID].modPos})\r\n\t\t},\r\n\t\tmoveMod: (G, ctx, playerID, cellID, type) => {\r\n\t\t\tremoveMod(G, playerID)\r\n\t\t\tplaceMod(G, playerID, cellID, type)\r\n\t\t\tlog(G, {playerID: playerID, move: \"placeMod\", cellID: cellID, type: type})\r\n\t\t}\r\n\t},\r\n\tturn: {\r\n\t\tmoveLimit: 1,\r\n\t\tonEnd: (G, ctx) => {\r\n\t\t},\r\n\t\tonMove: (G, ctx) => {\r\n\t\t}\r\n\t},\r\n\tminPlayers: 2,\r\n\tmaxPlayers: 8\r\n}\r\n\r\nexport default CamaewUp;","import React from 'react'\r\nimport {Button, Form} from 'react-bootstrap'\r\n\r\nfunction Entry({data, onJoinClick, onCreateClick}) {\r\n\r\n\treturn(\r\n\t\t<div id=\"entry-container\" className=\"lobby\">\r\n\t\t\t<div id=\"entry-server\">\r\n\t\t\t\t<Form.Label>Server</Form.Label>\r\n\t\t\t\t<Form.Control type=\"text\" value={data.serverPath} onChange={data.onServerPathChange} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Button variant=\"primary\" onClick={onJoinClick} size=\"lg\">Join Game</Button>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Button variant=\"primary\" onClick={onCreateClick} size=\"lg\">Create Game</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Entry;","import React from 'react'\r\nimport {Button, Form} from 'react-bootstrap'\r\n\r\n// function Join({onJoinJoinClick, onGameIDChange, gameID}) {\r\nfunction Join({data, onJoinJoinClick}) {\r\n\r\n\treturn(\r\n\t\t<div className=\"lobby\">\r\n\t\t\t<div>\r\n\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t<Form.Control type=\"text\" value={data.name} onChange={data.onNameChange} />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"join-gameid\">\r\n\t\t\t\t<Form.Label>Game ID</Form.Label>\r\n\t\t\t\t<Form.Control type=\"text\" value={data.gameID} onChange={data.onGameIDChange} />\r\n\t\t\t</div>\r\n\t\t\t<div id=\"lobby-join\" className=\"center\">\r\n\t\t\t\t<Form.Label>Join Game</Form.Label>\r\n\t\t\t\t<Button variant=\"primary\" onClick={onJoinJoinClick} disabled={!data.gameID || !data.name}>Join</Button>\r\n\t\t\t\t<Button variant=\"secondary\" onClick={data.backToEntry}>Back</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n}\r\n\r\nexport default Join;","import React from 'react'\r\nimport {Button, Form, ToggleButtonGroup, ToggleButton} from 'react-bootstrap'\r\n\r\nfunction Create({data, onCreateCreateClick}) {\r\n\r\n\t// const [numPlayers, setnumPlayers] = React.useState(4);\r\n\t// const [numCats, setNumCats] = React.useState(5);\r\n\r\n\t// function onNumPlayersChange(val) {\r\n\t// \tsetnumPlayers(val)\r\n\t// }\r\n\r\n\t// function onNumCatsChange(val) {\r\n\t// \tsetNumCats(val)\r\n\t// }\r\n\r\n\treturn(\r\n\t\t<div className=\"lobby\">\r\n\t\t\t<div>\r\n\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t<Form.Control type=\"text\" value={data.name} onChange={data.onNameChange} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Form.Label>Number of players</Form.Label>\r\n\t\t\t\t<ToggleButtonGroup type=\"radio\" name=\"numPlayers\" value={data.numPlayers} onChange={data.onNumPlayersChange}>\r\n\t\t\t\t\t<ToggleButton value={2}>2</ToggleButton>\r\n\t\t\t\t\t<ToggleButton value={3}>3</ToggleButton>\r\n\t\t\t\t\t<ToggleButton value={4}>4</ToggleButton>\r\n\t\t\t\t\t<ToggleButton value={5}>5</ToggleButton>\r\n\t\t\t\t\t<ToggleButton value={6}>6</ToggleButton>\r\n\t\t\t\t\t<ToggleButton value={7}>7</ToggleButton>\r\n\t\t\t\t\t<ToggleButton value={8}>8</ToggleButton>\r\n\t\t\t\t</ToggleButtonGroup>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Form.Label>Number of cats</Form.Label>\r\n\t\t\t\t<ToggleButtonGroup type=\"radio\" name=\"numCats\" value={data.numCats} onChange={data.onNumCatsChange}>\r\n\t\t\t\t\t<ToggleButton value={3}>3</ToggleButton>\r\n\t\t\t\t\t<ToggleButton value={4}>4</ToggleButton>\r\n\t\t\t\t\t<ToggleButton value={5}>5</ToggleButton>\r\n\t\t\t\t\t<ToggleButton value={6}>6</ToggleButton>\r\n\t\t\t\t</ToggleButtonGroup>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Form.Check type=\"checkbox\" label=\"Veil mode\" />\r\n\t\t\t\t<Form.Check type=\"checkbox\" label=\"Random seat\" />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<Button variant=\"primary\" onClick={onCreateCreateClick} disabled={!data.name}>Create</Button>\r\n\t\t\t\t<Button variant=\"secondary\" onClick={data.backToEntry}>Back</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default Create;","import React from 'react'\r\nimport {Button, Modal} from 'react-bootstrap'\r\n\r\nfunction Wait({data, startGame}) {\r\n\r\n\tconst [gameInfo, setGameInfo] = React.useState(null)\r\n\tconst [numPlayers, setNumPlayers] = React.useState(0)\r\n\tconst [playerID, setPlayerID] = React.useState(-1)\r\n\tconst [playerCredentials, setPlayerCredentials] = React.useState(\"\")\r\n\tconst [showConfirmLeave, setShowConfirmLeave] = React.useState(false)\r\n\r\n\t// no idea why we need to use useCallback() :P\r\n\t\r\n\tconst updateGameInfo = React.useCallback(() => {\r\n\t\t// console.log(\"Getting game info...\", data.gameID)\r\n\t\tfetch(data.serverPathFull + \"/\" + data.gameID, {\r\n\t\t\tmethod: \"get\"\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => setGameInfo(data))\r\n\t}, [data.gameID, data.serverPathFull])\r\n\r\n\tconst findSeat = React.useCallback(() => {\r\n\t\tupdateGameInfo()\r\n\t\tfor (let id=0; id < gameInfo.players.length; id ++) {\r\n\t\t\tif (gameInfo.players[id].name == null) {\r\n\t\t\t\treturn id\r\n\t\t\t}\r\n\t\t}\r\n\t}, [gameInfo, updateGameInfo])\r\n\r\n\tconst sit = React.useCallback(() => {\r\n\t\t// console.log(\"Sitting...\", gameInfo)\r\n\t\tconst seatID = findSeat()\r\n\t\t// console.log(\"Found empty seat\", seatID)\r\n\t\tconst opts = {\r\n\t\t\tplayerID: seatID,\r\n\t\t\tplayerName: data.name\r\n\t\t}\r\n\t\tfetch(data.serverPathFull + \"/\" + gameInfo.roomID + \"/join\", {\r\n\t\t\tmethod: \"post\",\r\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\r\n\t\t\tbody: JSON.stringify(opts)\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tsetPlayerCredentials(data.playerCredentials)\r\n\t\t\t\tsetPlayerID(seatID)\r\n\t\t\t\tupdateGameInfo()\r\n\t\t\t})\r\n\t}, [data.name, findSeat, gameInfo, data.serverPathFull, updateGameInfo])\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\tupdateGameInfo();\r\n\t\t}, 2000);\r\n\t\treturn () => {\r\n\t\t\tclearInterval(interval);\r\n\t\t};\r\n\t});\r\n\r\n\tReact.useEffect(() => {\r\n\t\tif (gameInfo != null) {\r\n\t\t\tsetNumPlayers(() => {\r\n\t\t\t\tlet count = 0\r\n\t\t\t\tfor (let id=0; id < gameInfo.players.length; id ++) {\r\n\t\t\t\t\tif (gameInfo.players[id].name != null) {\r\n\t\t\t\t\t\tcount ++\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn count\r\n\t\t\t})\r\n\t\t}\r\n\t}, [gameInfo, playerCredentials, playerID, sit])\r\n\r\n\tfunction stand(updateAfter=true) {\r\n\t\tconst opts = {\r\n\t\t\t\tplayerID: playerID,\r\n\t\t\t\tcredentials: playerCredentials\r\n\t\t\t} \r\n\t\tfetch(data.serverPathFull + \"/\" + gameInfo.roomID + \"/leave\", {\r\n\t\t\tmethod: \"post\",\r\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\r\n\t\t\tbody: JSON.stringify(opts)\r\n\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tif (updateAfter) updateGameInfo()\r\n\t\t\t})\r\n\t\tsetPlayerID(-1)\r\n\t}\r\n\r\n\tfunction onLeaveClick() {\r\n\t\t// console.log(\"Leaving...\")\r\n\t\tsetShowConfirmLeave(true)\t\t\r\n\t}\r\n\r\n\tfunction leave() {\r\n\t\tstand(false)\r\n\t\tdata.backToEntry()\r\n\t}\r\n\r\n\tfunction dialog(text, showState, setShowState) {\r\n\t\t// defaults\r\n\t\tif (text.confirm === undefined) text.confirm = \"Confirm\"\r\n\t\treturn(\r\n\t\t\t<Modal show={showState} onHide={() => setShowState(false)}>\r\n\t\t\t\t{text.header && \r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>{text.header}</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t}\r\n\t\t\t\t<Modal.Body>{text.body}</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={() => setShowState(false)}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => {\r\n\t\t\t\t\t\t\tleave()\r\n\t\t\t\t\t\t\tsetShowState(false)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{text.confirm}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t)\r\n\t}\r\n\r\n\tif (gameInfo == null) {\r\n\t\tupdateGameInfo()\r\n\t\treturn(<div>Connecting... {data.serverPath}</div>)\r\n\t}\r\n\telse {\r\n\t\treturn(\r\n\t\t\t<div className=\"lobby\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\tgameID: {gameInfo.roomID}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\tgameInfo.players.map((x, i) => {\r\n\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<div key={i}>\r\n\t\t\t\t\t\t\t\t{x.id} - {x.name}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={sit} disabled={playerID >= 0}>Sit</Button>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={stand} disabled={playerID < 0 || numPlayers === 1}>Stand</Button>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={onLeaveClick}>Leave</Button>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => startGame(data.serverPath, data.gameID, playerID, playerCredentials)} disabled={numPlayers < gameInfo.players.length}>Start</Button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Confirm leave dialog */}\r\n\r\n\t\t\t\t{dialog({\r\n\t\t\t\t\t\theader: \"Leaving\",\r\n\t\t\t\t\t\tbody: \"Are you sure you'd like to leave?\",\r\n\t\t\t\t\t\tconfirm: \"Leave\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\tshowConfirmLeave, setShowConfirmLeave)}\r\n\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default Wait;","import React from 'react'\r\nimport Entry from './Entry'\r\nimport Join from './Join'\r\nimport Create from './Create'\r\nimport Wait from './Wait'\r\n\r\nfunction Lobby({startGame}) {\r\n\r\n\tconst [name, setName] = React.useState(\"\");\r\n\tconst [lobbyState, setLobbyState] = React.useState(\"entry\");\r\n\tconst [serverPath, setServerPath] = React.useState(\"https://camaew-up.herokuapp.com\")\r\n\tconst [gameID, setGameID] = React.useState(\"\");\r\n\tconst [numPlayers, setnumPlayers] = React.useState(4);\r\n\tconst [numCats, setNumCats] = React.useState(5);\r\n\r\n\tfunction onServerPathChange(event) {\r\n\t\tsetServerPath(event.target.value);\r\n\t}\r\n\r\n\tfunction onNameChange(event) {\r\n\t\tsetName(event.target.value);\r\n\t}\r\n\r\n\tfunction onGameIDChange(event) {\r\n\t\tsetGameID(event.target.value)\r\n\t}\r\n\r\n\tfunction onNumPlayersChange(val) {\r\n\t\tsetnumPlayers(val)\r\n\t}\r\n\r\n\tfunction onNumCatsChange(val) {\r\n\t\tsetNumCats(val)\r\n\t}\r\n\r\n\tfunction onJoinClick() {\r\n\t\tsetLobbyState(\"join\")\r\n\t}\r\n\r\n\tfunction onCreateClick() {\r\n\t\tsetLobbyState(\"create\")\r\n\t}\r\n\r\n\tfunction onJoinJoinClick() {\r\n\t\t// console.log(\"Joining a game...\", gameID)\r\n\t\tjoinGame()\r\n\t}\r\n\r\n\tfunction onCreateCreateClick() {\r\n\t\t// console.log(\"Creating game...\")\r\n\t\tcreateGame().then(x => {\r\n\t\t\t// console.log(\"Game created\", x.gameID)\r\n\t\t\tsetGameID(x.gameID)\r\n\t\t\tjoinGame()\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a game.\r\n\t *\r\n\t * @return     A promise to gameID.\r\n\t */\r\n\tfunction createGame() {\r\n\t\t// const opts = {numPlayers: numPlayers, setupData: {}}\r\n\t\t// console.log(\"Creating game...\")\r\n\t\treturn fetch(serverPath + \"/games/CamaewUp/create\", {\r\n\t\t\tmethod: \"post\",\r\n\t\t\theaders: {\"Content-Type\": \"application/json\"},\r\n\t\t\tbody: JSON.stringify({numPlayers: numPlayers, setupData: {numCats: numCats, numTiles: 16}})\r\n\t\t})\r\n\t\t\t.then(response => response.json())\r\n\t}\r\n\r\n\t/**\r\n\t * Enters a game with a given gameID.\r\n\t * Note that this doesn't actually \"join\" the game\r\n\t * (i.e. pick a seat, get credentials, etc.), but\r\n\t * just enter into the room and display the information\r\n\t * (see who's there, which seats are available, etc.)\r\n\t *\r\n\t * @param      {string}  gameID  The game ID.\r\n\t */\r\n\tfunction joinGame() {\r\n\t\tsetLobbyState(\"wait\")\r\n\t}\r\n\r\n\tfunction backToEntry() {\r\n\t\tsetLobbyState(\"entry\")\r\n\t}\r\n\r\n\tconst data = {\r\n\t\tname: name,\r\n\t\tgameID: gameID,\r\n\t\tnumPlayers: numPlayers,\r\n\t\tnumCats: numCats,\r\n\t\tserverPath: serverPath,\r\n\t\tserverPathFull: serverPath + \"/games/CamaewUp\",\r\n\t\tonServerPathChange: onServerPathChange,\r\n\t\tonNameChange: onNameChange,\r\n\t\tonGameIDChange: onGameIDChange,\r\n\t\tonNumPlayersChange: onNumPlayersChange,\r\n\t\tonNumCatsChange: onNumCatsChange,\r\n\t\tbackToEntry: backToEntry,\r\n\t}\r\n\r\n\tif (lobbyState === \"entry\") {\r\n\t\treturn(<Entry data={data} onJoinClick={onJoinClick} onCreateClick={onCreateClick} />)\r\n\t}\r\n\telse if (lobbyState === \"join\") {\r\n\t\treturn(<Join data={data} onJoinJoinClick={onJoinJoinClick} />)\r\n\t}\r\n\telse if (lobbyState === \"create\") {\r\n\t\treturn(<Create data={data} onCreateCreateClick={onCreateCreateClick} />)\r\n\t}\r\n\telse if (lobbyState === \"wait\") {\r\n\t\t// console.log(\"name\", name)\r\n\t\treturn(<Wait data={data} startGame={startGame} />)\r\n\t}\r\n\r\n}\r\n\r\nexport default Lobby;","import React from 'react';\r\n\r\nexport default function Cell({className, cellData, cell_id, playerID, gameMetadata, prePlaceMod, preMoveMod, preFlipMod}) {\r\n\r\n\tfunction allowDrop(e) {\r\n\t\te.preventDefault();\r\n\t}\r\n\r\n\tfunction drop(e) {\r\n\t\te.preventDefault();\r\n\t\tprePlaceMod(Number(cell_id), e.dataTransfer.getData(\"type\"))\r\n\t}\r\n\r\n\tfunction handleModClick() {\r\n\t\tpreFlipMod(Number(cell_id))\r\n\t}\r\n\r\n\tfunction drag(e) {\r\n\t\te.dataTransfer.setData(\"type\", \"move\")\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={\"cell \" + className} onDragOver={allowDrop} onDrop={drop}>\r\n\t\t\t<div className=\"cell-content\">\r\n\t\t\t{\r\n\t\t\t\tcellData.stack.slice(0).reverse().map((x, i) => {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<div className={`token tokencolor-${x}`} key={\"cat_stack\" + i}>\r\n\t\t\t\t\t\t\t{x}<br />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t{cellData.mod &&\r\n\t\t\t\t<div className={`cell-mod card ${cellData.mod.type}`}\r\n\t\t\t\t\t\tonClick={handleModClick}\r\n\t\t\t\t\t\tdraggable={playerID === cellData.mod.playerID}\r\n\t\t\t\t\t\tonDragStart={drag}>\r\n\t\t\t\t\t{gameMetadata[cellData.mod.playerID].name}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n\r\n}","import React from 'react'\r\nimport Cell from './Cell'\r\nimport {Button, Modal} from 'react-bootstrap'\r\n\r\nexport default function RaceTrack({G, playerID, gameMetadata, placeMod, moveMod, removeMod, flipMod}) {\r\n\r\n\tconst [showPlaceDialog, setShowPlaceDialog] = React.useState(false)\r\n\tconst [showFlipDialog, setShowFlipDialog] = React.useState(false)\r\n\tconst [cellID, setCellID] = React.useState(null)\r\n\tconst [type, setType] = React.useState(null)\r\n\t\r\n\tfunction prePlaceMod(cellID, type) {\r\n\t\tif (type === \"place\" && G.players[playerID].modPos > -1) {\r\n\t\t\tconsole.error(\"Player has already placed his/her mod.\")\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (G.board[cellID].stack.length > 0) {\r\n\t\t\tconsole.error(\"Cannot place mod where cats are.\")\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif ((cellID > 0 && G.board[cellID-1].mod !== null && G.board[cellID-1].mod.playerID !== playerID)\r\n\t\t\t\t|| (cellID < G.board.length - 1 && G.board[cellID+1].mod !== null && G.board[cellID+1].mod !== playerID)) {\r\n\t\t\tconsole.error(\"Cannot place mod adjacent to an existing mod.\")\r\n\t\t\treturn\r\n\t\t}\r\n\t\tif (G.board[cellID].mod !== null) {\r\n\t\t\tif (G.board[cellID].mod.playerID === playerID)\r\n\t\t\t\treturn\r\n\t\t\tconsole.error(\"Cannot place mod on top of an existing mod.\")\r\n\t\t\treturn\r\n\t\t}\r\n\t\tsetCellID(cellID)\r\n\t\tsetType(type)\r\n\t\tsetShowPlaceDialog(true)\r\n\t}\r\n\r\n\tfunction preFlipMod(cellID) {\r\n\t\tsetCellID(cellID)\r\n\t\tsetShowFlipDialog(true)\r\n\t}\r\n\r\n\tfunction PlaceDialog() {\r\n\t\treturn (\r\n\t\t\t<Modal show={showPlaceDialog} onHide={() => setShowPlaceDialog(false)}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Placing Mod</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>Which kind of mod would you like to place?</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={() => setShowPlaceDialog(false)}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button variant=\"danger\" onClick={() => {\r\n\t\t\t\t\t\t\t// console.log(\"Place tape mod\")\r\n\t\t\t\t\t\t\tif (type === \"place\")\r\n\t\t\t\t\t\t\t\tplaceMod(playerID, cellID, \"tape\")\r\n\t\t\t\t\t\t\telse if (type === \"move\")\r\n\t\t\t\t\t\t\t\tmoveMod(playerID, cellID, \"tape\")\r\n\t\t\t\t\t\t\tsetShowPlaceDialog(false)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tTape\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button variant=\"success\" onClick={() => {\r\n\t\t\t\t\t\t\t// console.log(\"Place cucumber mod\")\r\n\t\t\t\t\t\t\tif (type === \"place\")\r\n\t\t\t\t\t\t\t\tplaceMod(playerID, cellID, \"cucumber\")\r\n\t\t\t\t\t\t\telse if (type === \"move\")\r\n\t\t\t\t\t\t\t\tmoveMod(playerID, cellID, \"cucumber\")\r\n\t\t\t\t\t\t\tsetShowPlaceDialog(false)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tCucumber\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t)\r\n\t}\r\n\r\n\tfunction FlipDialog() {\r\n\t\treturn (\r\n\t\t\t<Modal show={showFlipDialog} onHide={() => setShowFlipDialog(false)}>\r\n\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t<Modal.Title>Flipping Mod</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\t\t\t\t<Modal.Body>Would you like to flip the mod?</Modal.Body>\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button variant=\"secondary\" onClick={() => setShowFlipDialog(false)}>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button variant=\"outline-primary\" onClick={() => {\r\n\t\t\t\t\t\t\t// console.log(\"Remove mod\")\r\n\t\t\t\t\t\t\tremoveMod(playerID)\r\n\t\t\t\t\t\t\tsetShowFlipDialog(false)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tRemove\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => {\r\n\t\t\t\t\t\t\t// console.log(\"Flip mod\")\r\n\t\t\t\t\t\t\tflipMod(playerID)\r\n\t\t\t\t\t\t\tsetShowFlipDialog(false)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tFlip\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n\t\t)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<React.Fragment>\r\n\r\n\t\t\t<div className=\"board\">\r\n\t\t\t\t{\r\n\t\t\t\t\tG.board.slice(0, G.numTiles).map((cell, i) => <Cell\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcellData={cell}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell_id={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplayerID={playerID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgameMetadata={gameMetadata}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprePlaceMod={prePlaceMod}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreFlipMod={preFlipMod}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tG.board.slice(G.numTiles).map((cell, i) => <Cell\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"cell-extra\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcellData={cell}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcell_id={i}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplayerID={playerID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tgameMetadata={gameMetadata}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprePlaceMod={prePlaceMod}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpreFlipMod={preFlipMod}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t\t<PlaceDialog />\r\n\t\t\t<FlipDialog />\r\n\r\n\t\t</React.Fragment>\r\n\t)\r\n\r\n}\r\n","import React from 'react'\r\nimport {ListGroup} from 'react-bootstrap'\r\n\r\nfunction Players({currentPlayer, players, gameMetadata}) {\r\n\treturn(\r\n\t\t<div className=\"players\">\r\n\t\t\t<ListGroup>\r\n\t\t\t{\r\n\t\t\t\tgameMetadata.map((x, i) => {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<ListGroup.Item active={x.id === Number(currentPlayer)} className=\"flex\" key={\"player\" + i}>\r\n\t\t\t\t\t\t\t{`${x.name} (${players[i].coins})`}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tplayers[i].smallBets.map((color, j) => {\r\n\t\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t\t<React.Fragment key={\"smallBets\" + j}>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor.map(card => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <div className={`tokencolor-${j} card`} key={\"smallBet\" + i}>{card}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t</ListGroup>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Players;","import React from 'react'\r\nimport {ListGroup} from 'react-bootstrap'\r\n\r\nexport default function RolledDice({dice}) {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className=\"section\">Rolled dice</div>\r\n\t\t\t<ListGroup horizontal>\r\n\t\t\t{\r\n\t\t\t\tdice.map((x, i) => {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<ListGroup.Item className={`tokencolor-${i}`} key={i}>\r\n\t\t\t\t\t\t\t{x}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t</ListGroup>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\nimport {ListGroup} from 'react-bootstrap'\r\n\r\nfunction SmallStack({stack, makeSmallBet}) {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className=\"section\">SmallStack</div>\r\n\t\t\t<ListGroup horizontal>\r\n\t\t\t{\r\n\t\t\t\tstack.map((x, i) => {\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<ListGroup.Item className={`tokencolor-${i}`} onClick={() => makeSmallBet(i)} key={i}>\r\n\t\t\t\t\t\t\t{x[x.length - 1]}\r\n\t\t\t\t\t\t</ListGroup.Item>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t</ListGroup>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default SmallStack;","import React from 'react'\r\n\r\n\r\n\r\nexport default function BetCards({cards}) {\r\n\r\n\tfunction drag(e) {\r\n\t\te.dataTransfer.setData(\"betID\", e.target.getAttribute(\"bet_id\"))\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className=\"section\">Bet Cards</div>\r\n\t\t\t\t<div className=\"flex\">\r\n\t\t\t\t{\r\n\t\t\t\t\tcards.map((x, i) => {\r\n\t\t\t\t\t\tif (x) {\r\n\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName={`tokencolor-${i} card`}\r\n\t\t\t\t\t\t\t\t\t\tbet_id={i}\r\n\t\t\t\t\t\t\t\t\t\tdraggable=\"true\"\r\n\t\t\t\t\t\t\t\t\t\tonDragStart={drag}\r\n\t\t\t\t\t\t\t\t\t\tkey={\"betCards\" + i}>\r\n\t\t\t\t\t\t\t\t\tX\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\n\r\nexport default function BetZone({stack, playerID, makeBigBet, side}) {\r\n\r\n\tfunction allowDrop(e) {\r\n\t  e.preventDefault();\r\n\t}\r\n\r\n\tfunction drop(e) {\r\n\t\te.preventDefault();\r\n\t\t// console.log(\"dropped\", e.dataTransfer.getData(\"betID\"))\r\n\t\tmakeBigBet(playerID, Number(e.dataTransfer.getData(\"betID\")), side)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className=\"betzone\" onDragOver={allowDrop} onDrop={drop}>\r\n\t\t\t{`${side}: ${stack[side].length}`}\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React from 'react'\r\n\r\nexport default function Mod({hasMod, playerID}) {\r\n\r\n\tfunction drag(e) {\r\n\t\te.dataTransfer.setData(\"playerID\", e.target.getAttribute(\"player_id\"))\r\n\t\te.dataTransfer.setData(\"type\", \"place\")\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className=\"section\">Mod Tile</div>\r\n\t\t\t\t<div className=\"flex\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"card\"\r\n\t\t\t\t\t\t\tdraggable={hasMod}\r\n\t\t\t\t\t\t\tplayer_id={playerID}\r\n\t\t\t\t\t\t\tonDragStart={drag}>\r\n\t\t\t\t\t\t{hasMod ? \"X\" : \"–\"}\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\n\r\nfunction LogArea({logArray, gameMetadata}) {\r\n\r\n\tconst logArea = React.useRef(null)\r\n\r\n\tReact.useEffect(() => {\r\n\t\tlogArea.current.scrollTop = logArea.current.scrollHeight\r\n\t}, [logArray])\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<div className=\"log-area\" ref={logArea}>\r\n\t\t\t{\r\n\t\t\t\tlogArray.map(x => {\r\n\t\t\t\t\t// console.log(\"xxx\", JSON.stringify(x))\r\n\t\t\t\t\tswitch (x.move) {\r\n\t\t\t\t\t\tcase \"text\":\r\n\t\t\t\t\t\t\treturn <div>{x.text}</div>\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\tcase \"roll\":\r\n\t\t\t\t\t\t\treturn <div className=\"flex\">{`${gameMetadata[x.playerID].name} rolled a `}<span className={`tokencolor-${x.catID} card`}>{x.roll}</span></div>\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\tcase \"mod\":\r\n\t\t\t\t\t\t\treturn <div className=\"flex\">{`... found a ${x.mod}`}</div>\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\tcase \"smallBet\": \r\n\t\t\t\t\t\t\treturn <div className=\"flex\">{`${gameMetadata[x.playerID].name} took a small bet `}<span className={`tokencolor-${x.catID} card`}>{x.card}</span></div>\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\tcase \"bigBet\":\r\n\t\t\t\t\t\t\treturn <div className=\"flex\">{`${gameMetadata[x.playerID].name} made a ${x.side} bet`}</div>\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\tcase \"placeMod\":\r\n\t\t\t\t\t\t\treturn <div className=\"flex\">{`${gameMetadata[x.playerID].name} placed a ${x.type} mod at ${x.cellID}`}</div>\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\tcase \"removeMod\":\r\n\t\t\t\t\t\t\treturn <div className=\"flex\">{`${gameMetadata[x.playerID].name} removed the mod at ${x.cellID}`}</div>\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\tcase \"flipMod\":\r\n\t\t\t\t\t\t\treturn <div className=\"flex\">{`${gameMetadata[x.playerID].name} flipped the mod at ${x.cellID}`}</div>\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\tcase \"moveMod\":\r\n\t\t\t\t\t\t\treturn <div className=\"flex\">{`${gameMetadata[x.playerID].name} moved the mod to a ${x.type} mod at ${x.cellID}`}</div>\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default LogArea;","import React from 'react'\r\nimport RaceTrack from './RaceTrack'\r\nimport Players from './Players'\r\nimport RolledDice from './RolledDice'\r\nimport SmallStack from './SmallStack'\r\nimport BetCards from './BetCards'\r\nimport BetZone from './BetZone'\r\nimport Mod from './Mod'\r\nimport LogArea from './LogArea'\r\nimport {Button} from 'react-bootstrap'\r\n\r\nfunction GameScreen({G, ctx, moves, playerID, gameMetadata}) {\r\n\r\n\tfunction roll() {\r\n\t\tmoves.roll(playerID)\r\n\t}\r\n\r\n\tfunction makeSmallBet(bet) {\r\n\t\tif (G.smallStack[bet].length > 0)\r\n\t\t\tmoves.makeSmallBet(playerID, bet)\r\n\t}\r\n\r\n\tfunction makeBigBet(playerID, bet, side) {\r\n\t\t// console.log(\"bigbet...\", playerID, bet, side)\r\n\t\tmoves.makeBigBet(playerID, bet, side)\r\n\t}\r\n\r\n\tfunction placeMod(playerID, cellID, type) {\r\n\t\t// console.log(\"Trying to place mod:\", playerID, cellID, type)\r\n\t\tmoves.placeMod(playerID, cellID, type)\r\n\t}\r\n\r\n\tfunction removeMod(playerID) {\r\n\t\t// console.log(\"Remove mod\")\r\n\t\tmoves.removeMod(playerID)\r\n\t}\r\n\r\n\tfunction flipMod(playerID, cellID) {\r\n\t\t// console.log(\"Flip mod\")\r\n\t\tmoves.flipMod(playerID, cellID)\r\n\t}\r\n\r\n\tfunction moveMod(playerID, newCellID, type) {\r\n\t\t// console.log(\"Move mod\")\r\n\t\tmoves.moveMod(playerID, newCellID, type)\r\n\t}\r\n\r\n\t// convert string back to number for easier processing\r\n\tplayerID = Number(playerID)\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"flex\">\r\n\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t<div className=\"section\">Camaew Up!</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Players currentPlayer={ctx.currentPlayer} players={G.players} gameMetadata={gameMetadata} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Button variant=\"primary\" onClick={roll}>Roll</Button>\r\n\t\t\t\t\t\t<RolledDice dice={G.dice} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t<Mod hasMod={G.players[playerID].modPos === -1} playerID={playerID} />\r\n\t\t\t\t\t<SmallStack stack={G.smallStack} makeSmallBet={makeSmallBet} />\r\n\t\t\t\t\t<BetCards cards={G.players[playerID].betCards} />\r\n\t\t\t\t\t<div className=\"flex\">\r\n\t\t\t\t\t\t<BetZone stack={G.bigStack} playerID={playerID} makeBigBet={makeBigBet} side=\"win\" />\r\n\t\t\t\t\t\t<BetZone stack={G.bigStack} playerID={playerID} makeBigBet={makeBigBet} side=\"lose\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"control\">\r\n\t\t\t\t\t<LogArea logArray={G.logArray} gameMetadata={gameMetadata} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<RaceTrack\r\n\t\t\t\t\tG={G}\r\n\t\t\t\t\tplayerID={playerID}\r\n\t\t\t\t\tgameMetadata={gameMetadata}\r\n\t\t\t\t\tplaceMod={placeMod}\r\n\t\t\t\t\tmoveMod={moveMod}\r\n\t\t\t\t\tremoveMod={removeMod}\r\n\t\t\t\t\tflipMod={flipMod} />\r\n\t\t</React.Fragment>\r\n\t);\r\n\r\n}\r\n\r\nexport default GameScreen;","import React, {useState, useEffect} from 'react'\r\nimport {Client} from 'boardgame.io/react'\r\nimport {SocketIO} from 'boardgame.io/multiplayer'\r\nimport CamaewUp from './CamaewUp'\r\nimport Lobby from './lobby/Lobby'\r\nimport GameScreen from './game/GameScreen'\r\nimport { createBrowserHistory } from 'history'\r\n\r\nimport './style.css'\r\n\r\nlet CamaewUpClient = null\r\n\r\nconst history = createBrowserHistory()\r\n\r\nfunction App() {\r\n\r\n\tconst [state, setState] = useState(\"lobby\");\r\n\tconst [data, setData] = useState({})\r\n\r\n\tfunction startGame(serverPath, gameID, playerID, credentials) {\r\n\t\tsetData({gameID: gameID, playerID: playerID, credentials: credentials})\r\n\t\tCamaewUpClient = Client({game: CamaewUp,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t board: GameScreen,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t multiplayer: SocketIO({server: serverPath}),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t debug: true\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t })\r\n\t\tsetState(\"game\")\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (state.name === \"game\") {\r\n\t\t\thistory.push('?' + state.gameID)\r\n\t\t}\r\n\t}, [state.name, state.gameID])\r\n\r\n\tif (state === \"lobby\") {\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Lobby startGame={startGame}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\telse if (state === \"game\") {\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<CamaewUpClient gameID={data.gameID} playerID={String(data.playerID)} credentials={data.credentials} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}